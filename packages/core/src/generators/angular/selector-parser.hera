# Parser for angular selectors
# https://angular.dev/guide/components/selectors#types-of-selectors
#
# to build:
# ./node_modules/.bin/hera --libPath @danielx/hera/dist/machine.js < src/generators/angular/selector-parser.hera > src/generators/angular/selector-parser.js
Selector
  TagName?:tagName Part*:parts ->
    const firstId = parts.find(([key]) => key === "id");
    let id;
    if (firstId) {
      id = firstId[1];
    }

    return {
      tagName,
      id,
      classes: parts.filter(([key]) => key === "class").map(([, value]) => value),
      attributes: Object.fromEntries(parts.filter(([key]) => key !== "id" && key !== "class"))
    }

TagName
  Identifier

Part
  Attribute
  Class
  Id

Attribute
  "[" __ AttributeName __ "=" __ AttributeValue __  "]" ->
    return [$3, $7]
  "[" __ AttributeName __ "]" ->
    return [$3]

AttributeValue
  $DoubleQuotedString
  $SingleQuotedString

DoubleQuotedString
  "\"" /(?:\\.|[^"])*/ "\""

SingleQuotedString
  "'" /(?:\\.|[^'])*/ "'"

Class
  "." Identifier ->
    return ["class", $2]

Id
  "#" Identifier ->
    return ["id", $2]

EscapeSequence
  "'"
  "\""
  "\\"
  /./  ->
    return "\\" + $0

Identifier
  /[_a-zA-Z][_a-zA-Z0-9-]*/ -> $0

AttributeName
  Identifier

__
  /[ \t]*/
