// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`swift > jsx > Javascript Test > SwiftPlainComponent 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    ForEach(0..<10, id: \\\\.self) { item in
      Text(\\"\\")
    }
    VStack(alignment: .leading, spacing: 8) {
      VStack(alignment: .leading, spacing: 8) {
        Text(\\"\\"\\"
        WHAT'S DIFFERENT ABOUT SHOPAHOLIC
        \\"\\"\\")
      }
      VStack(alignment: .leading, spacing: 8) {
        Text(\\"\\"\\"
        At Shopaholic, we're revolutionizing the online shopping experience through our commitment
        to sustainability, innovation, and customer satisfaction. Our unique approach combines
        lightning-fast delivery, eco-friendly practices, and cutting-edge technology to ensure you
        get the best products while minimizing environmental impact.
        \\"\\"\\")
      }
      VStack(alignment: .leading, spacing: 8) {
        VStack(alignment: .leading, spacing: 8) {
          VStack(alignment: .leading, spacing: 8) {

          }
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            2-Day Shipping
            \\"\\"\\")
          }
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam posuere erat a ante
            vestibulum, in volutpat ligula elementum.
            \\"\\"\\")
          }
        }
        VStack(alignment: .leading, spacing: 8) {
          Image(\\"placeholder\\").resizable().aspectRatio(contentMode: .fit)
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Carbon Neutral
            \\"\\"\\")
          }
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam posuere erat a ante
            vestibulum, in volutpat ligula elementum.
            \\"\\"\\")
          }
        }
        VStack(alignment: .leading, spacing: 8) {
          Image(\\"placeholder\\").resizable().aspectRatio(contentMode: .fit)
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Advanced Dye Tech
            \\"\\"\\")
          }
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam posuere erat a ante
            vestibulum, in volutpat ligula elementum.
            \\"\\"\\")
          }
        }
      }
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > jsx > Javascript Test > SwiftSingleQuotesReplacement 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Text(\\"\\"\\"
    WHAT'S DIFFERENT ABOUT SHOPAHOLIC
    \\"\\"\\")
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > jsx > Remove Internal mitosis package 1`] = `
"import SwiftUI

struct MyBasicComponent: View {

@State private var name: String = \\"PatrickJS\\"

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Text(\\"Hello \\")
    VStack(alignment: .leading, spacing: 8) {

    }
    Text(\\"! I can run in React, Qwik, Vue, Solid, or Liquid!\\")
  }

  }

  }

  #if DEBUG
  struct MyBasicComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyBasicComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > jsx > Typescript Test > SwiftPlainComponent 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    ForEach(0..<10, id: \\\\.self) { item in
      Text(\\"\\")
    }
    VStack(alignment: .leading, spacing: 8) {
      VStack(alignment: .leading, spacing: 8) {
        Text(\\"\\"\\"
        WHAT'S DIFFERENT ABOUT SHOPAHOLIC
        \\"\\"\\")
      }
      VStack(alignment: .leading, spacing: 8) {
        Text(\\"\\"\\"
        At Shopaholic, we're revolutionizing the online shopping experience through our commitment
        to sustainability, innovation, and customer satisfaction. Our unique approach combines
        lightning-fast delivery, eco-friendly practices, and cutting-edge technology to ensure you
        get the best products while minimizing environmental impact.
        \\"\\"\\")
      }
      VStack(alignment: .leading, spacing: 8) {
        VStack(alignment: .leading, spacing: 8) {
          VStack(alignment: .leading, spacing: 8) {

          }
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            2-Day Shipping
            \\"\\"\\")
          }
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam posuere erat a ante
            vestibulum, in volutpat ligula elementum.
            \\"\\"\\")
          }
        }
        VStack(alignment: .leading, spacing: 8) {
          Image(\\"placeholder\\").resizable().aspectRatio(contentMode: .fit)
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Carbon Neutral
            \\"\\"\\")
          }
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam posuere erat a ante
            vestibulum, in volutpat ligula elementum.
            \\"\\"\\")
          }
        }
        VStack(alignment: .leading, spacing: 8) {
          Image(\\"placeholder\\").resizable().aspectRatio(contentMode: .fit)
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Advanced Dye Tech
            \\"\\"\\")
          }
          VStack(alignment: .leading, spacing: 8) {
            Text(\\"\\"\\"
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam posuere erat a ante
            vestibulum, in volutpat ligula elementum.
            \\"\\"\\")
          }
        }
      }
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > jsx > Typescript Test > SwiftSingleQuotesReplacement 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Text(\\"\\"\\"
    WHAT'S DIFFERENT ABOUT SHOPAHOLIC
    \\"\\"\\")
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > basic 1`] = `
"import SwiftUI

struct MyComponent: View {

var name: String = \\"Steve\\"

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    TextField(\\"\\", text: $name)
    .onChange(self.name = event.target.value)
    Text(\\"\\"\\"
    Hello! I can run in React, Vue, Solid, or Liquid!
    \\"\\"\\")
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > bindGroup 1`] = `
"import SwiftUI

struct MyComponent: View {

var tortilla: String = \\"Plain\\"
var fillings: [Any] = []

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    TextField(\\"\\", text: .constant(\\"Plain\\"))
    .onChange(self.tortilla = event.target.value)
    TextField(\\"\\", text: .constant(\\"Whole wheat\\"))
    .onChange(self.tortilla = event.target.value)
    TextField(\\"\\", text: .constant(\\"Spinach\\"))
    .onChange(self.tortilla = event.target.value)
    Br()
    Br()
    TextField(\\"\\", text: .constant(\\"Rice\\"))
    .onChange(self.fillings = event.target.value)
    TextField(\\"\\", text: .constant(\\"Beans\\"))
    .onChange(self.fillings = event.target.value)
    TextField(\\"\\", text: .constant(\\"Cheese\\"))
    .onChange(self.fillings = event.target.value)
    TextField(\\"\\", text: .constant(\\"Guac (extra)\\"))
    .onChange(self.fillings = event.target.value)
    Text(\\"\\")
    Text(\\"\\")
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > bindProperty 1`] = `
"import SwiftUI

struct MyComponent: View {

var value: String = \\"hello\\"

var body: some View {
  TextField(\\"\\", text: $value)

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > classDirective 1`] = `
"import SwiftUI

struct MyComponent: View {
  let disabled: Any

  var focus: Bool = true

  var body: some View {
    TextField(\\"\\", text: .constant(\\"\\"))

    }

    }

    #if DEBUG
    struct MyComponent_Previews: PreviewProvider {
      static var previews: some View {
        MyComponent(
          disabled: /* provide preview value */
        )
      }
    }
    #endif"
`;

exports[`swift > svelte > Javascript Test > context 1`] = `
"import SwiftUI

struct MyComponent: View {

var activeTab: Double = 0

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    VStack(alignment: .leading, spacing: 8) {

    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > each 1`] = `
"import SwiftUI

struct MyComponent: View {

var numbers: String = [\\"one\\", \\"two\\", \\"three\\"]

var body: some View {
  List {
    ForEach(self.numbers, id: \\\\.self) { item in
      Text(\\"\\")
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > eventHandlers 1`] = `
"import SwiftUI

struct MyComponent: View {

// Function state variables
var log: (Any) -> Void = { (msg = \\"hello\\": Any) -> Void in
  print(msg);
}

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Button(action: { self.log(\\"hi\\") }) {
      Text(\\"Log\\")
    }
    Button(action: { self.log(event) }) {
      Text(\\"Log\\")
    }
    Button(action: { self.log(event) }) {
      Text(\\"Log\\")
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > html 1`] = `
"import SwiftUI

struct MyComponent: View {

var html: String = \\"<b>bold</b>\\"

var body: some View {
  VStack(alignment: .leading, spacing: 8) {

  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > ifElse 1`] = `
"import SwiftUI

struct MyComponent: View {

var show: Bool = true

// Function state variables
var toggle: () -> Void = { () -> Void in
  self.show = !self.show;
}

var body: some View {
  Show {
    Button(action: { self.toggle(event) }) {
      Text(\\" Hide \\")
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > imports 1`] = `
"import SwiftUI

struct MyComponent: View {

var disabled: Bool = false

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Button(action: { {} }) {
      Slot()
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > lifecycleHooks 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  VStack(alignment: .leading, spacing: 8) {

  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > reactive 1`] = `
"import SwiftUI

struct MyComponent: View {

var name: String = \\"Steve\\"
var lowercaseName: Any = lowercaseName() {
  return self.name.toLowerCase();
}

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    TextField(\\"\\", text: $name)
    Text(\\"\\"\\"
    Lowercase: \\"\\"\\")
    VStack(alignment: .leading, spacing: 8) {

    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > reactiveWithFn 1`] = `
"import SwiftUI

struct MyComponent: View {

var a: Double = 2
var b: Double = 5
var result: Any = null

// Function state variables
var calculateResult: (Any, Any) -> Void = { (a_: Any, b_: Any) -> Void in
  self.result = a_ * b_;
}

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    TextField(\\"\\", text: $a)
    .onChange(self.a = event.target.value)
    TextField(\\"\\", text: $b)
    .onChange(self.b = event.target.value)
    Text(\\"\\"\\"
    Result: \\"\\"\\")
    VStack(alignment: .leading, spacing: 8) {

    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > slots 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Slot {
      Text(\\"default\\")
    }
    Slot {
      VStack(alignment: .leading, spacing: 8) {
        Text(\\"default\\")
      }
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > style 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  TextField(\\"\\", text: .constant(\\"\\"))

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Javascript Test > textExpressions 1`] = `
"import SwiftUI

struct MyComponent: View {

var a: Double = 5
var b: Double = 12

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Text(\\"\\"\\"
    normal:
    \\"\\"\\")
    VStack(alignment: .leading, spacing: 8) {

    }
    Br()
    Text(\\"\\"\\"
    conditional
    \\"\\"\\")
    VStack(alignment: .leading, spacing: 8) {

    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > basic 1`] = `
"import SwiftUI

struct MyComponent: View {

var name: String = \\"Steve\\"

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    TextField(\\"\\", text: $name)
    .onChange(self.name = event.target.value)
    Text(\\"\\"\\"
    Hello! I can run in React, Vue, Solid, or Liquid!
    \\"\\"\\")
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > bindGroup 1`] = `
"import SwiftUI

struct MyComponent: View {

var tortilla: String = \\"Plain\\"
var fillings: [Any] = []

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    TextField(\\"\\", text: .constant(\\"Plain\\"))
    .onChange(self.tortilla = event.target.value)
    TextField(\\"\\", text: .constant(\\"Whole wheat\\"))
    .onChange(self.tortilla = event.target.value)
    TextField(\\"\\", text: .constant(\\"Spinach\\"))
    .onChange(self.tortilla = event.target.value)
    Br()
    Br()
    TextField(\\"\\", text: .constant(\\"Rice\\"))
    .onChange(self.fillings = event.target.value)
    TextField(\\"\\", text: .constant(\\"Beans\\"))
    .onChange(self.fillings = event.target.value)
    TextField(\\"\\", text: .constant(\\"Cheese\\"))
    .onChange(self.fillings = event.target.value)
    TextField(\\"\\", text: .constant(\\"Guac (extra)\\"))
    .onChange(self.fillings = event.target.value)
    Text(\\"\\")
    Text(\\"\\")
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > bindProperty 1`] = `
"import SwiftUI

struct MyComponent: View {

var value: String = \\"hello\\"

var body: some View {
  TextField(\\"\\", text: $value)

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > classDirective 1`] = `
"import SwiftUI

struct MyComponent: View {
  let disabled: Any

  var focus: Bool = true

  var body: some View {
    TextField(\\"\\", text: .constant(\\"\\"))

    }

    }

    #if DEBUG
    struct MyComponent_Previews: PreviewProvider {
      static var previews: some View {
        MyComponent(
          disabled: /* provide preview value */
        )
      }
    }
    #endif"
`;

exports[`swift > svelte > Typescript Test > context 1`] = `
"import SwiftUI

struct MyComponent: View {

var activeTab: Double = 0

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    VStack(alignment: .leading, spacing: 8) {

    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > each 1`] = `
"import SwiftUI

struct MyComponent: View {

var numbers: String = [\\"one\\", \\"two\\", \\"three\\"]

var body: some View {
  List {
    ForEach(self.numbers, id: \\\\.self) { item in
      Text(\\"\\")
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > eventHandlers 1`] = `
"import SwiftUI

struct MyComponent: View {

// Function state variables
var log: (Any) -> Void = { (msg = \\"hello\\": Any) -> Void in
  print(msg);
}

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Button(action: { self.log(\\"hi\\") }) {
      Text(\\"Log\\")
    }
    Button(action: { self.log(event) }) {
      Text(\\"Log\\")
    }
    Button(action: { self.log(event) }) {
      Text(\\"Log\\")
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > html 1`] = `
"import SwiftUI

struct MyComponent: View {

var html: String = \\"<b>bold</b>\\"

var body: some View {
  VStack(alignment: .leading, spacing: 8) {

  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > ifElse 1`] = `
"import SwiftUI

struct MyComponent: View {

var show: Bool = true

// Function state variables
var toggle: () -> Void = { () -> Void in
  self.show = !self.show;
}

var body: some View {
  Show {
    Button(action: { self.toggle(event) }) {
      Text(\\" Hide \\")
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > imports 1`] = `
"import SwiftUI

struct MyComponent: View {

var disabled: Bool = false

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Button(action: { {} }) {
      Slot()
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > lifecycleHooks 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  VStack(alignment: .leading, spacing: 8) {

  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > reactive 1`] = `
"import SwiftUI

struct MyComponent: View {

var name: String = \\"Steve\\"
var lowercaseName: Any = lowercaseName() {
  return self.name.toLowerCase();
}

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    TextField(\\"\\", text: $name)
    Text(\\"\\"\\"
    Lowercase: \\"\\"\\")
    VStack(alignment: .leading, spacing: 8) {

    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > reactiveWithFn 1`] = `
"import SwiftUI

struct MyComponent: View {

var a: Double = 2
var b: Double = 5
var result: Any = null

// Function state variables
var calculateResult: (Any, Any) -> Void = { (a_: Any, b_: Any) -> Void in
  self.result = a_ * b_;
}

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    TextField(\\"\\", text: $a)
    .onChange(self.a = event.target.value)
    TextField(\\"\\", text: $b)
    .onChange(self.b = event.target.value)
    Text(\\"\\"\\"
    Result: \\"\\"\\")
    VStack(alignment: .leading, spacing: 8) {

    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > slots 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Slot {
      Text(\\"default\\")
    }
    Slot {
      VStack(alignment: .leading, spacing: 8) {
        Text(\\"default\\")
      }
    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > style 1`] = `
"import SwiftUI

struct MyComponent: View {

var body: some View {
  TextField(\\"\\", text: .constant(\\"\\"))

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;

exports[`swift > svelte > Typescript Test > textExpressions 1`] = `
"import SwiftUI

struct MyComponent: View {

var a: Double = 5
var b: Double = 12

var body: some View {
  VStack(alignment: .leading, spacing: 8) {
    Text(\\"\\"\\"
    normal:
    \\"\\"\\")
    VStack(alignment: .leading, spacing: 8) {

    }
    Br()
    Text(\\"\\"\\"
    conditional
    \\"\\"\\")
    VStack(alignment: .leading, spacing: 8) {

    }
  }

  }

  }

  #if DEBUG
  struct MyComponent_Previews: PreviewProvider {
    static var previews: some View {
      MyComponent(

      )
    }
  }
  #endif"
`;
