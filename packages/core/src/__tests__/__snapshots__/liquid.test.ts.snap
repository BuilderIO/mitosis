// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Liquid > jsx > Javascript Test > AdvancedRef 1`] = `
"<div>
  {% if showInput %}
  <div>
    <input class=\\"input\\" value=\\"{{name}}\\" />
    <label for=\\"cars\\">Choose a car:</label>
    <select name=\\"cars\\" id=\\"cars\\">
      <option value=\\"supra\\">GR Supra</option>
      <option value=\\"86\\">GR 86</option>
    </select>
  </div>
  {% endif %} Hello ! I can run in React, Qwik, Vue, Solid, or Web Component!
</div>
<style>
  .input {
    color: red;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > Basic 1`] = `
"<div class=\\"test div\\">
  <input />

  Hello! I can run in React, Vue, Solid, or Liquid!
</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > Basic Context 1`] = `
"<div>
  Hello! I can run in React, Vue, Solid, or Liquid!

  <input />
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > Basic OnMount Update 1`] = `
"<div>Hello {{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > Basic Outputs 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > Basic Outputs Meta 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > BasicAttribute 1`] = `
"<input autocapitalize=\\"on\\" autocomplete=\\"on\\" spellcheck=\\"{{true}}\\" />
"
`;

exports[`Liquid > jsx > Javascript Test > BasicBooleanAttribute 1`] = `
"<div>
  {% if children %}{{children}} {{type}}{% endif %}
  <MyBooleanAttributeComponent toggle=\\"{{true}}\\"></MyBooleanAttributeComponent>
  <MyBooleanAttributeComponent toggle=\\"{{true}}\\"></MyBooleanAttributeComponent>
  <MyBooleanAttributeComponent list=\\"{{null}}\\"></MyBooleanAttributeComponent>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > BasicChildComponent 1`] = `
"<div>
  <MyBasicComponent id=\\"{{dev}}\\"></MyBasicComponent>
  <div>
    <MyBasicOnMountUpdateComponent
      hi=\\"{{name}}\\"
      bye=\\"{{dev}}\\"
    ></MyBasicOnMountUpdateComponent>
  </div>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > BasicFor 1`] = `
"<div>
  {% for person in names %}
  <div>
    <input value=\\"{{name}}\\" />

    Hello {{person}} ! I can run in Qwik, Web Component, React, Vue, Solid, or
    Liquid!
  </div>
  {% endfor %}
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > BasicRef 1`] = `
"<div>
  {% if showInput %}
  <div>
    <input class=\\"input\\" value=\\"{{name}}\\" />
    <label for=\\"cars\\">Choose a car:</label>
    <select name=\\"cars\\" id=\\"cars\\">
      <option value=\\"supra\\">GR Supra</option>
      <option value=\\"86\\">GR 86</option>
    </select>
  </div>
  {% endif %} Hello ! I can run in React, Qwik, Vue, Solid, or Web Component!
</div>
<style>
  .input {
    color: red;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > BasicRefAssignment 1`] = `
"<div><button>Click</button></div>
"
`;

exports[`Liquid > jsx > Javascript Test > BasicRefPrevious 1`] = `
"<div>
  <h1>Now: {{count}} , before: {{prevCount}}</h1>
  <button>Increment</button>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > Button 1`] = `
"<div>
  {% if link %}
  <a props.attributes=\\"{{attributes}}\\" href=\\"{{link}}\\">{{text}}</a>
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > Columns 1`] = `
"<div class=\\"builder-columns div\\">
  {% for column in columns %}
  <div class=\\"builder-column div-2\\">{{column.content}} {{index}}</div>
  {% endfor %}
</div>
<style>
  .div {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    line-height: normal;
  }
  @media (max-width: 999px) {
    .div {
      flex-direction: row;
    }
  }
  @media (max-width: 639px) {
    .div {
      flex-direction: row-reverse;
    }
  }
  .div-2 {
    flex-grow: 1;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > ContentSlotHtml 1`] = `
"<div>
  <slot name=\\"{{slotTesting}}\\"></slot>
  <div><hr /></div>
  <div><slot></slot></div>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > ContentSlotJSX 1`] = `
"{% if slotReference %}
<div props.attributes=\\"{{attributes}}\\" class=\\"{{cls}}\\">
  <div><hr /></div>
  <div>{{children}}</div>
</div>
{% endif %}
"
`;

exports[`Liquid > jsx > Javascript Test > CustomCode 1`] = `
"<div innerHTML=\\"{{code}}\\"></div>
"
`;

exports[`Liquid > jsx > Javascript Test > Embed 1`] = `
"<div innerHTML=\\"{{code}}\\"></div>
"
`;

exports[`Liquid > jsx > Javascript Test > Form 1`] = `
"<form
  validate=\\"{{validate}}\\"
  method=\\"{{method}}\\"
  name=\\"{{name}}\\"
  props.attributes=\\"{{attributes}}\\"
></form>
<style>
  .pre {
    padding: 10px;
    color: red;
    text-align: center;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > Image 1`] = `
"<div>
  <picture>
    <source srcset=\\"{{srcset}}\\" />
  </picture>
  {{children}}
</div>
<style>
  .img {
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
    object-fit: cover;
    object-position: center;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > Image State 1`] = `
"<div>
  {% for item in images %}
  <div><img class=\\"custom-class\\" src=\\"{{item}}\\" key=\\"{{itemIndex}}\\" /></div>
  {% endfor %}
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > Img 1`] = `
"<img props.attributes=\\"{{attributes}}\\" alt=\\"{{altText}}\\" src=\\"{{imgSrc}}\\" />
"
`;

exports[`Liquid > jsx > Javascript Test > Input 1`] = `
"<input
  props.attributes=\\"{{attributes}}\\"
  placeholder=\\"{{placeholder}}\\"
  type=\\"{{type}}\\"
  name=\\"{{name}}\\"
  value=\\"{{value}}\\"
  defaultValue=\\"{{defaultValue}}\\"
  required=\\"{{required}}\\"
/>
"
`;

exports[`Liquid > jsx > Javascript Test > InputParent 1`] = `
"<FormInputComponent name=\\"kingzez\\" type=\\"text\\"></FormInputComponent>
"
`;

exports[`Liquid > jsx > Javascript Test > RawText 1`] = `
"<span></span>
"
`;

exports[`Liquid > jsx > Javascript Test > Section 1`] = `
"<section props.attributes=\\"{{attributes}}\\">{{children}}</section>
"
`;

exports[`Liquid > jsx > Javascript Test > Select 1`] = `
"<select
  props.attributes=\\"{{attributes}}\\"
  value=\\"{{value}}\\"
  defaultValue=\\"{{defaultValue}}\\"
  name=\\"{{name}}\\"
>
  {% for option in options %}
  <option value=\\"{{option.value}}\\" data-index=\\"{{index}}\\"></option>
  {% endfor %}
</select>
"
`;

exports[`Liquid > jsx > Javascript Test > SlotDefault 1`] = `
"<div>
  <slot><div class=\\"default-slot\\">Default content</div></slot>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > SlotHtml 1`] = `
"<div>
  <ContentSlotCode><slot></slot></ContentSlotCode>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > SlotJsx 1`] = `
"<div><ContentSlotCode></ContentSlotCode></div>
"
`;

exports[`Liquid > jsx > Javascript Test > SlotNamed 1`] = `
"<div>
  <slot name=\\"myAwesomeSlot\\"></slot>
  <slot name=\\"top\\"></slot>
  <slot name=\\"left\\">Default left</slot>
  <slot>Default Child</slot>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > Stamped.io 1`] = `
"<div data-user=\\"{{name}}\\">
  <button>Write a review</button>

  {% for review in reviews %}
  <div class=\\"review\\" key=\\"{{review.id}}\\">
    <img class=\\"img\\" src=\\"{{review.avatar}}\\" />
    <div>
      <div>N: {{index}}</div>
      <div>{{review.author}}</div>
      <div>{{review.reviewMessage}}</div>
    </div>
  </div>
  {% endfor %}
</div>
<style>
  .input {
    display: block;
  }
  .textarea {
    display: block;
  }
  .button {
    display: block;
  }
  .review {
    margin: 10px;
    padding: 10px;
    background: white;
    display: flex;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    -webkit-font-smoothing: antialiased;
  }
  .img {
    height: 30px;
    width: 30px;
    margin-right: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > Submit 1`] = `
"<button type=\\"submit\\" props.attributes=\\"{{attributes}}\\">{{text}}</button>
"
`;

exports[`Liquid > jsx > Javascript Test > Text 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > Textarea 1`] = `
"<textarea
  props.attributes=\\"{{attributes}}\\"
  placeholder=\\"{{placeholder}}\\"
  name=\\"{{name}}\\"
  value=\\"{{value}}\\"
  defaultValue=\\"{{defaultValue}}\\"
></textarea>
"
`;

exports[`Liquid > jsx > Javascript Test > Video 1`] = `
"<video
  preload=\\"none\\"
  props.attributes=\\"{{attributes}}\\"
  poster=\\"{{posterImage}}\\"
  autoplay=\\"{{autoPlay}}\\"
  muted=\\"{{muted}}\\"
  controls=\\"{{controls}}\\"
  loop=\\"{{loop}}\\"
></video>
"
`;

exports[`Liquid > jsx > Javascript Test > arrowFunctionInUseStore 1`] = `
"<div>Hello {{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > basicForNoTagReference 1`] = `
"<state.TagNameGetter>
  Hello
  <state.tag>{{name}}</state.tag>
  {% for action in actions %}
  <state.TagName>
    <action.icon></action.icon>
    <span>{{action.text}}</span>
  </state.TagName>
  {% endfor %}
</state.TagNameGetter>
"
`;

exports[`Liquid > jsx > Javascript Test > basicForwardRef 1`] = `
"<div><input class=\\"input\\" value=\\"{{name}}\\" /></div>
<style>
  .input {
    color: red;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > basicForwardRefMetadata 1`] = `
"<div><input class=\\"input\\" value=\\"{{name}}\\" /></div>
<style>
  .input {
    color: red;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > basicOnUpdateReturn 1`] = `
"<div>Hello! {{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > class + ClassName + css 1`] = `
"<div class=\\"test2 test div\\">
  Hello! I can run in React, Vue, Solid, or Liquid!
</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > class + css 1`] = `
"<div class=\\"test div\\">Hello! I can run in React, Vue, Solid, or Liquid!</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > className + css 1`] = `
"<div class=\\"test div\\">Hello! I can run in React, Vue, Solid, or Liquid!</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > className 1`] = `
"<div>
  <div class=\\"no binding\\">Without Binding</div>
  <div class=\\"{{bindings}}\\">With binding</div>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > classState 1`] = `
"<div style=\\"{{styleState}}\\">
  Hello! I can run in React, Vue, Solid, or Liquid!
</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > componentWithContext 1`] = `
"<div><div>{{foo.value}}</div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > componentWithContextMultiRoot 1`] = `
"<div>
  <div>{{foo.value}}</div>
  <div>other</div>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > contentState 1`] = `
"<div>setting context</div>
"
`;

exports[`Liquid > jsx > Javascript Test > defaultProps 1`] = `
"<div>
  {% if link %}
  <a props.attributes=\\"{{attributes}}\\" href=\\"{{link}}\\">{{text}}</a>
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > defaultPropsOutsideComponent 1`] = `
"<div>
  {% if link %}
  <a props.attributes=\\"{{attributes}}\\" href=\\"{{link}}\\">{{text}}</a>
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > defaultValsWithTypes 1`] = `
"<div>Hello</div>
"
`;

exports[`Liquid > jsx > Javascript Test > expressionState 1`] = `
"<div>{{refToUse}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > getterState 1`] = `
"<div>
  <p>{{foo2}}</p>
  <p>{{bar}}</p>
  <p></p>
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > import types 1`] = `
"<RenderBlock></RenderBlock>
"
`;

exports[`Liquid > jsx > Javascript Test > multipleOnUpdate 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > multipleOnUpdateWithDeps 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > multipleSpreads 1`] = `
"<input attrs=\\"{{attrs}}\\" props=\\"{{props}}\\" />
"
`;

exports[`Liquid > jsx > Javascript Test > nestedShow 1`] = `
"{% if conditionA %}{% endif %}
"
`;

exports[`Liquid > jsx > Javascript Test > nestedStyles 1`] = `
"<div class=\\"div\\">Hello world</div>
<style>
  .div {
    display: flex;
    --bar: red;
    color: var(--bar);
  }
  @media (max-width: env(--mobile)) {
    .div {
      display: block;
    }
  }
  .div:hover {
    display: flex;
  }
  .div:active {
    display: inline;
  }
  .div .nested-selector {
    display: grid;
  }
  .div .nested-selector:hover {
    display: block;
  }
  .div.nested-selector:active {
    display: inline-block;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > onEvent 1`] = `
"<div class=\\"builder-embed\\"><div>Test</div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > onInit & onMount 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > onInit 1`] = `
"<div>Default name defined by parent {{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > onMount 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > onMountMultiple 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > onUpdate 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > onUpdateWithDeps 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > preserveExportOrLocalStatement 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > preserveTyping 1`] = `
"<div>Hello! I can run in React, Vue, Solid, or Liquid! {{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > propsDestructure 1`] = `
"<div>
  {{children}} {{type}} Hello! I can run in React, Vue, Solid, or Liquid!
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > propsInterface 1`] = `
"<div>Hello! I can run in React, Vue, Solid, or Liquid! {{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > propsType 1`] = `
"<div>Hello! I can run in React, Vue, Solid, or Liquid! {{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > referencingFunInsideHook 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > renderBlock 1`] = `
"{% if shouldWrap %} {% endif %}
"
`;

exports[`Liquid > jsx > Javascript Test > renderContentExample 1`] = `
"<div class=\\"div\\"><RenderBlocks blocks=\\"{{content.blocks}}\\"></RenderBlocks></div>
<style>
  .div {
    display: flex;
    flex-direction: columns;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > rootFragmentMultiNode 1`] = `
"<div>
  {% if link %}
  <a props.attributes=\\"{{attributes}}\\" href=\\"{{link}}\\">{{text}}</a>
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > rootShow 1`] = `""`;

exports[`Liquid > jsx > Javascript Test > self-referencing component 1`] = `
"<div>{{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > self-referencing component with children 1`] = `
"<div>{{name}} {{children}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > showExpressions 1`] = `
"<div>
  {% if conditionA %}Content0{% endif %} {% if conditionA %}ContentA{% endif %}
  {% if conditionA %}{% endif %} {% if conditionA %}ContentB{% endif %} {% if
  conditionA %}{{undefined}}{% endif %} {% if conditionA %}ContentC{% endif %}
  {% if conditionA %}{% endif %} {% if conditionA %}ContentD{% endif %} {% if
  conditionA %}{% endif %} {% if conditionA %}ContentE{% endif %} {% if
  conditionA %}hello{% endif %} {% if conditionA %}ContentF{% endif %} {% if
  conditionA %}123{% endif %}
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > showWithFor 1`] = `
"{% if conditionA %}{% for item in items %}
<div key=\\"{{idx}}\\">{{item}}</div>
{% endfor %}{% endif %}
"
`;

exports[`Liquid > jsx > Javascript Test > showWithOtherValues 1`] = `
"<div>
  {% if conditionA %} ContentA {% endif %} {% if conditionA %} ContentB {% endif
  %} {% if conditionA %} ContentC {% endif %} {% if conditionA %} ContentD {%
  endif %} {% if conditionA %} ContentE {% endif %} {% if conditionA %} ContentF
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Javascript Test > showWithRootText 1`] = `
"{% if conditionA %} ContentA {% endif %}
"
`;

exports[`Liquid > jsx > Javascript Test > signalsOnUpdate 1`] = `
"<div class=\\"test div\\">{{id}} {{foo.value.bar.baz}}</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > spreadAttrs 1`] = `
"<input attrs=\\"{{attrs}}\\" />
"
`;

exports[`Liquid > jsx > Javascript Test > spreadNestedProps 1`] = `
"<input props.nested=\\"{{nested}}\\" />
"
`;

exports[`Liquid > jsx > Javascript Test > spreadProps 1`] = `
"<input props=\\"{{props}}\\" />
"
`;

exports[`Liquid > jsx > Javascript Test > string-literal-store 1`] = `
"<div>{{foo}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > string-literal-store-kebab 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Javascript Test > styleClassAndCss 1`] = `
"<div class=\\"builder-column div\\"></div>
<style>
  .div {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > stylePropClassAndCss 1`] = `
"<div class=\\"USE_TARGET_BLOCK_1 div\\" style=\\"{{attributes.style}}\\"></div>
<style>
  .div {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > subComponent 1`] = `
"<Foo></Foo>
"
`;

exports[`Liquid > jsx > Javascript Test > svgComponent 1`] = `
"<svg fill=\\"none\\" role=\\"img\\" width=\\"{{42}}\\" height=\\"{{42}}\\">
  <defs>
    <filter id=\\"prefix__filter0_f\\" filterUnits=\\"userSpaceOnUse\\">
      <feFlood result=\\"BackgroundImageFix\\"></feFlood>
      <feBlend
        in=\\"SourceGraphic\\"
        in2=\\"BackgroundImageFix\\"
        result=\\"shape\\"
      ></feBlend>
      <feGaussianBlur
        result=\\"effect1_foregroundBlur\\"
        stdDeviation=\\"{{7}}\\"
      ></feGaussianBlur>
    </filter>
  </defs>
</svg>
"
`;

exports[`Liquid > jsx > Javascript Test > typeDependency 1`] = `
"<div>{{foo}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > use-style 1`] = `
"<button type=\\"button\\">Button</button>
<style>
  button {
    background: blue;
    color: white;
    font-size: 12px;
    outline: 1px solid black;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > use-style-and-css 1`] = `
"<button type=\\"button\\" class=\\"button\\">Button</button>
<style>
  button {
    font-size: 12px;
    outline: 1px solid black;
  }

  .button {
    background: blue;
    color: white;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > use-style-outside-component 1`] = `
"<button type=\\"button\\">Button</button>
<style>
  button {
    background: blue;
    color: white;
    font-size: 12px;
    outline: 1px solid black;
  }
</style>
"
`;

exports[`Liquid > jsx > Javascript Test > useTarget 1`] = `
"<div>{{name}}</div>
"
`;

exports[`Liquid > jsx > Javascript Test > webComponent 1`] = `
"<swiper-container slides-per-view=\\"3\\" navigation=\\"true\\" pagination=\\"true\\">
  <swiper-slide>Slide 1</swiper-slide>
  <swiper-slide>Slide 2</swiper-slide>
  <swiper-slide>Slide 3</swiper-slide>
</swiper-container>
"
`;

exports[`Liquid > jsx > Remove Internal mitosis package 1`] = `
"<div>Hello {{name}} ! I can run in React, Qwik, Vue, Solid, or Liquid!</div>
"
`;

exports[`Liquid > jsx > Typescript Test > AdvancedRef 1`] = `
"<div>
  {% if showInput %}
  <div>
    <input class=\\"input\\" value=\\"{{name}}\\" />
    <label for=\\"cars\\">Choose a car:</label>
    <select name=\\"cars\\" id=\\"cars\\">
      <option value=\\"supra\\">GR Supra</option>
      <option value=\\"86\\">GR 86</option>
    </select>
  </div>
  {% endif %} Hello ! I can run in React, Qwik, Vue, Solid, or Web Component!
</div>
<style>
  .input {
    color: red;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > Basic 1`] = `
"<div class=\\"test div\\">
  <input />

  Hello! I can run in React, Vue, Solid, or Liquid!
</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > Basic Context 1`] = `
"<div>
  Hello! I can run in React, Vue, Solid, or Liquid!

  <input />
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > Basic OnMount Update 1`] = `
"<div>Hello {{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > Basic Outputs 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > Basic Outputs Meta 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > BasicAttribute 1`] = `
"<input autocapitalize=\\"on\\" autocomplete=\\"on\\" spellcheck=\\"{{true}}\\" />
"
`;

exports[`Liquid > jsx > Typescript Test > BasicBooleanAttribute 1`] = `
"<div>
  {% if children %}{{children}} {{type}}{% endif %}
  <MyBooleanAttributeComponent toggle=\\"{{true}}\\"></MyBooleanAttributeComponent>
  <MyBooleanAttributeComponent toggle=\\"{{true}}\\"></MyBooleanAttributeComponent>
  <MyBooleanAttributeComponent list=\\"{{null}}\\"></MyBooleanAttributeComponent>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > BasicChildComponent 1`] = `
"<div>
  <MyBasicComponent id=\\"{{dev}}\\"></MyBasicComponent>
  <div>
    <MyBasicOnMountUpdateComponent
      hi=\\"{{name}}\\"
      bye=\\"{{dev}}\\"
    ></MyBasicOnMountUpdateComponent>
  </div>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > BasicFor 1`] = `
"<div>
  {% for person in names %}
  <div>
    <input value=\\"{{name}}\\" />

    Hello {{person}} ! I can run in Qwik, Web Component, React, Vue, Solid, or
    Liquid!
  </div>
  {% endfor %}
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > BasicRef 1`] = `
"<div>
  {% if showInput %}
  <div>
    <input class=\\"input\\" value=\\"{{name}}\\" />
    <label for=\\"cars\\">Choose a car:</label>
    <select name=\\"cars\\" id=\\"cars\\">
      <option value=\\"supra\\">GR Supra</option>
      <option value=\\"86\\">GR 86</option>
    </select>
  </div>
  {% endif %} Hello ! I can run in React, Qwik, Vue, Solid, or Web Component!
</div>
<style>
  .input {
    color: red;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > BasicRefAssignment 1`] = `
"<div><button>Click</button></div>
"
`;

exports[`Liquid > jsx > Typescript Test > BasicRefPrevious 1`] = `
"<div>
  <h1>Now: {{count}} , before: {{prevCount}}</h1>
  <button>Increment</button>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > Button 1`] = `
"<div>
  {% if link %}
  <a props.attributes=\\"{{attributes}}\\" href=\\"{{link}}\\">{{text}}</a>
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > Columns 1`] = `
"<div class=\\"builder-columns div\\">
  {% for column in columns %}
  <div class=\\"builder-column div-2\\">{{column.content}} {{index}}</div>
  {% endfor %}
</div>
<style>
  .div {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    line-height: normal;
  }
  @media (max-width: 999px) {
    .div {
      flex-direction: row;
    }
  }
  @media (max-width: 639px) {
    .div {
      flex-direction: row-reverse;
    }
  }
  .div-2 {
    flex-grow: 1;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > ContentSlotHtml 1`] = `
"<div>
  <slot name=\\"{{slotTesting}}\\"></slot>
  <div><hr /></div>
  <div><slot></slot></div>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > ContentSlotJSX 1`] = `
"{% if slotReference %}
<div props.attributes=\\"{{attributes}}\\" class=\\"{{cls}}\\">
  <div><hr /></div>
  <div>{{children}}</div>
</div>
{% endif %}
"
`;

exports[`Liquid > jsx > Typescript Test > CustomCode 1`] = `
"<div innerHTML=\\"{{code}}\\"></div>
"
`;

exports[`Liquid > jsx > Typescript Test > Embed 1`] = `
"<div innerHTML=\\"{{code}}\\"></div>
"
`;

exports[`Liquid > jsx > Typescript Test > Form 1`] = `
"<form
  validate=\\"{{validate}}\\"
  method=\\"{{method}}\\"
  name=\\"{{name}}\\"
  props.attributes=\\"{{attributes}}\\"
></form>
<style>
  .pre {
    padding: 10px;
    color: red;
    text-align: center;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > Image 1`] = `
"<div>
  <picture>
    <source srcset=\\"{{srcset}}\\" />
  </picture>
  {{children}}
</div>
<style>
  .img {
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
    object-fit: cover;
    object-position: center;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > Image State 1`] = `
"<div>
  {% for item in images %}
  <div><img class=\\"custom-class\\" src=\\"{{item}}\\" key=\\"{{itemIndex}}\\" /></div>
  {% endfor %}
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > Img 1`] = `
"<img props.attributes=\\"{{attributes}}\\" alt=\\"{{altText}}\\" src=\\"{{imgSrc}}\\" />
"
`;

exports[`Liquid > jsx > Typescript Test > Input 1`] = `
"<input
  props.attributes=\\"{{attributes}}\\"
  placeholder=\\"{{placeholder}}\\"
  type=\\"{{type}}\\"
  name=\\"{{name}}\\"
  value=\\"{{value}}\\"
  defaultValue=\\"{{defaultValue}}\\"
  required=\\"{{required}}\\"
/>
"
`;

exports[`Liquid > jsx > Typescript Test > InputParent 1`] = `
"<FormInputComponent name=\\"kingzez\\" type=\\"text\\"></FormInputComponent>
"
`;

exports[`Liquid > jsx > Typescript Test > RawText 1`] = `
"<span></span>
"
`;

exports[`Liquid > jsx > Typescript Test > Section 1`] = `
"<section props.attributes=\\"{{attributes}}\\">{{children}}</section>
"
`;

exports[`Liquid > jsx > Typescript Test > Select 1`] = `
"<select
  props.attributes=\\"{{attributes}}\\"
  value=\\"{{value}}\\"
  defaultValue=\\"{{defaultValue}}\\"
  name=\\"{{name}}\\"
>
  {% for option in options %}
  <option value=\\"{{option.value}}\\" data-index=\\"{{index}}\\"></option>
  {% endfor %}
</select>
"
`;

exports[`Liquid > jsx > Typescript Test > SlotDefault 1`] = `
"<div>
  <slot><div class=\\"default-slot\\">Default content</div></slot>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > SlotHtml 1`] = `
"<div>
  <ContentSlotCode><slot></slot></ContentSlotCode>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > SlotJsx 1`] = `
"<div><ContentSlotCode></ContentSlotCode></div>
"
`;

exports[`Liquid > jsx > Typescript Test > SlotNamed 1`] = `
"<div>
  <slot name=\\"myAwesomeSlot\\"></slot>
  <slot name=\\"top\\"></slot>
  <slot name=\\"left\\">Default left</slot>
  <slot>Default Child</slot>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > Stamped.io 1`] = `
"<div data-user=\\"{{name}}\\">
  <button>Write a review</button>

  {% for review in reviews %}
  <div class=\\"review\\" key=\\"{{review.id}}\\">
    <img class=\\"img\\" src=\\"{{review.avatar}}\\" />
    <div>
      <div>N: {{index}}</div>
      <div>{{review.author}}</div>
      <div>{{review.reviewMessage}}</div>
    </div>
  </div>
  {% endfor %}
</div>
<style>
  .input {
    display: block;
  }
  .textarea {
    display: block;
  }
  .button {
    display: block;
  }
  .review {
    margin: 10px;
    padding: 10px;
    background: white;
    display: flex;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    -webkit-font-smoothing: antialiased;
  }
  .img {
    height: 30px;
    width: 30px;
    margin-right: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > Submit 1`] = `
"<button type=\\"submit\\" props.attributes=\\"{{attributes}}\\">{{text}}</button>
"
`;

exports[`Liquid > jsx > Typescript Test > Text 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > Textarea 1`] = `
"<textarea
  props.attributes=\\"{{attributes}}\\"
  placeholder=\\"{{placeholder}}\\"
  name=\\"{{name}}\\"
  value=\\"{{value}}\\"
  defaultValue=\\"{{defaultValue}}\\"
></textarea>
"
`;

exports[`Liquid > jsx > Typescript Test > Video 1`] = `
"<video
  preload=\\"none\\"
  props.attributes=\\"{{attributes}}\\"
  poster=\\"{{posterImage}}\\"
  autoplay=\\"{{autoPlay}}\\"
  muted=\\"{{muted}}\\"
  controls=\\"{{controls}}\\"
  loop=\\"{{loop}}\\"
></video>
"
`;

exports[`Liquid > jsx > Typescript Test > arrowFunctionInUseStore 1`] = `
"<div>Hello {{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > basicForNoTagReference 1`] = `
"<state.TagNameGetter>
  Hello
  <state.tag>{{name}}</state.tag>
  {% for action in actions %}
  <state.TagName>
    <action.icon></action.icon>
    <span>{{action.text}}</span>
  </state.TagName>
  {% endfor %}
</state.TagNameGetter>
"
`;

exports[`Liquid > jsx > Typescript Test > basicForwardRef 1`] = `
"<div><input class=\\"input\\" value=\\"{{name}}\\" /></div>
<style>
  .input {
    color: red;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > basicForwardRefMetadata 1`] = `
"<div><input class=\\"input\\" value=\\"{{name}}\\" /></div>
<style>
  .input {
    color: red;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > basicOnUpdateReturn 1`] = `
"<div>Hello! {{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > class + ClassName + css 1`] = `
"<div class=\\"test2 test div\\">
  Hello! I can run in React, Vue, Solid, or Liquid!
</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > class + css 1`] = `
"<div class=\\"test div\\">Hello! I can run in React, Vue, Solid, or Liquid!</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > className + css 1`] = `
"<div class=\\"test div\\">Hello! I can run in React, Vue, Solid, or Liquid!</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > className 1`] = `
"<div>
  <div class=\\"no binding\\">Without Binding</div>
  <div class=\\"{{bindings}}\\">With binding</div>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > classState 1`] = `
"<div style=\\"{{styleState}}\\">
  Hello! I can run in React, Vue, Solid, or Liquid!
</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > componentWithContext 1`] = `
"<div><div>{{foo.value}}</div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > componentWithContextMultiRoot 1`] = `
"<div>
  <div>{{foo.value}}</div>
  <div>other</div>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > contentState 1`] = `
"<div>setting context</div>
"
`;

exports[`Liquid > jsx > Typescript Test > defaultProps 1`] = `
"<div>
  {% if link %}
  <a props.attributes=\\"{{attributes}}\\" href=\\"{{link}}\\">{{text}}</a>
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > defaultPropsOutsideComponent 1`] = `
"<div>
  {% if link %}
  <a props.attributes=\\"{{attributes}}\\" href=\\"{{link}}\\">{{text}}</a>
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > defaultValsWithTypes 1`] = `
"<div>Hello</div>
"
`;

exports[`Liquid > jsx > Typescript Test > expressionState 1`] = `
"<div>{{refToUse}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > getterState 1`] = `
"<div>
  <p>{{foo2}}</p>
  <p>{{bar}}</p>
  <p></p>
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > import types 1`] = `
"<RenderBlock></RenderBlock>
"
`;

exports[`Liquid > jsx > Typescript Test > multipleOnUpdate 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > multipleOnUpdateWithDeps 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > multipleSpreads 1`] = `
"<input attrs=\\"{{attrs}}\\" props=\\"{{props}}\\" />
"
`;

exports[`Liquid > jsx > Typescript Test > nestedShow 1`] = `
"{% if conditionA %}{% endif %}
"
`;

exports[`Liquid > jsx > Typescript Test > nestedStyles 1`] = `
"<div class=\\"div\\">Hello world</div>
<style>
  .div {
    display: flex;
    --bar: red;
    color: var(--bar);
  }
  @media (max-width: env(--mobile)) {
    .div {
      display: block;
    }
  }
  .div:hover {
    display: flex;
  }
  .div:active {
    display: inline;
  }
  .div .nested-selector {
    display: grid;
  }
  .div .nested-selector:hover {
    display: block;
  }
  .div.nested-selector:active {
    display: inline-block;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > onEvent 1`] = `
"<div class=\\"builder-embed\\"><div>Test</div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > onInit & onMount 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > onInit 1`] = `
"<div>Default name defined by parent {{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > onMount 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > onMountMultiple 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > onUpdate 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > onUpdateWithDeps 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > preserveExportOrLocalStatement 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > preserveTyping 1`] = `
"<div>Hello! I can run in React, Vue, Solid, or Liquid! {{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > propsDestructure 1`] = `
"<div>
  {{children}} {{type}} Hello! I can run in React, Vue, Solid, or Liquid!
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > propsInterface 1`] = `
"<div>Hello! I can run in React, Vue, Solid, or Liquid! {{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > propsType 1`] = `
"<div>Hello! I can run in React, Vue, Solid, or Liquid! {{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > referencingFunInsideHook 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > renderBlock 1`] = `
"{% if shouldWrap %} {% endif %}
"
`;

exports[`Liquid > jsx > Typescript Test > renderContentExample 1`] = `
"<div class=\\"div\\"><RenderBlocks blocks=\\"{{content.blocks}}\\"></RenderBlocks></div>
<style>
  .div {
    display: flex;
    flex-direction: columns;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > rootFragmentMultiNode 1`] = `
"<div>
  {% if link %}
  <a props.attributes=\\"{{attributes}}\\" href=\\"{{link}}\\">{{text}}</a>
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > rootShow 1`] = `""`;

exports[`Liquid > jsx > Typescript Test > self-referencing component 1`] = `
"<div>{{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > self-referencing component with children 1`] = `
"<div>{{name}} {{children}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > showExpressions 1`] = `
"<div>
  {% if conditionA %}Content0{% endif %} {% if conditionA %}ContentA{% endif %}
  {% if conditionA %}{% endif %} {% if conditionA %}ContentB{% endif %} {% if
  conditionA %}{{undefined}}{% endif %} {% if conditionA %}ContentC{% endif %}
  {% if conditionA %}{% endif %} {% if conditionA %}ContentD{% endif %} {% if
  conditionA %}{% endif %} {% if conditionA %}ContentE{% endif %} {% if
  conditionA %}hello{% endif %} {% if conditionA %}ContentF{% endif %} {% if
  conditionA %}123{% endif %}
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > showWithFor 1`] = `
"{% if conditionA %}{% for item in items %}
<div key=\\"{{idx}}\\">{{item}}</div>
{% endfor %}{% endif %}
"
`;

exports[`Liquid > jsx > Typescript Test > showWithOtherValues 1`] = `
"<div>
  {% if conditionA %} ContentA {% endif %} {% if conditionA %} ContentB {% endif
  %} {% if conditionA %} ContentC {% endif %} {% if conditionA %} ContentD {%
  endif %} {% if conditionA %} ContentE {% endif %} {% if conditionA %} ContentF
  {% endif %}
</div>
"
`;

exports[`Liquid > jsx > Typescript Test > showWithRootText 1`] = `
"{% if conditionA %} ContentA {% endif %}
"
`;

exports[`Liquid > jsx > Typescript Test > signalsOnUpdate 1`] = `
"<div class=\\"test div\\">{{id}} {{foo.value.bar.baz}}</div>
<style>
  .div {
    padding: 10px;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > spreadAttrs 1`] = `
"<input attrs=\\"{{attrs}}\\" />
"
`;

exports[`Liquid > jsx > Typescript Test > spreadNestedProps 1`] = `
"<input props.nested=\\"{{nested}}\\" />
"
`;

exports[`Liquid > jsx > Typescript Test > spreadProps 1`] = `
"<input props=\\"{{props}}\\" />
"
`;

exports[`Liquid > jsx > Typescript Test > string-literal-store 1`] = `
"<div>{{foo}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > string-literal-store-kebab 1`] = `
"<div></div>
"
`;

exports[`Liquid > jsx > Typescript Test > styleClassAndCss 1`] = `
"<div class=\\"builder-column div\\"></div>
<style>
  .div {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > stylePropClassAndCss 1`] = `
"<div class=\\"USE_TARGET_BLOCK_1 div\\" style=\\"{{attributes.style}}\\"></div>
<style>
  .div {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > subComponent 1`] = `
"<Foo></Foo>
"
`;

exports[`Liquid > jsx > Typescript Test > svgComponent 1`] = `
"<svg fill=\\"none\\" role=\\"img\\" width=\\"{{42}}\\" height=\\"{{42}}\\">
  <defs>
    <filter id=\\"prefix__filter0_f\\" filterUnits=\\"userSpaceOnUse\\">
      <feFlood result=\\"BackgroundImageFix\\"></feFlood>
      <feBlend
        in=\\"SourceGraphic\\"
        in2=\\"BackgroundImageFix\\"
        result=\\"shape\\"
      ></feBlend>
      <feGaussianBlur
        result=\\"effect1_foregroundBlur\\"
        stdDeviation=\\"{{7}}\\"
      ></feGaussianBlur>
    </filter>
  </defs>
</svg>
"
`;

exports[`Liquid > jsx > Typescript Test > typeDependency 1`] = `
"<div>{{foo}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > use-style 1`] = `
"<button type=\\"button\\">Button</button>
<style>
  button {
    background: blue;
    color: white;
    font-size: 12px;
    outline: 1px solid black;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > use-style-and-css 1`] = `
"<button type=\\"button\\" class=\\"button\\">Button</button>
<style>
  button {
    font-size: 12px;
    outline: 1px solid black;
  }

  .button {
    background: blue;
    color: white;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > use-style-outside-component 1`] = `
"<button type=\\"button\\">Button</button>
<style>
  button {
    background: blue;
    color: white;
    font-size: 12px;
    outline: 1px solid black;
  }
</style>
"
`;

exports[`Liquid > jsx > Typescript Test > useTarget 1`] = `
"<div>{{name}}</div>
"
`;

exports[`Liquid > jsx > Typescript Test > webComponent 1`] = `
"<swiper-container slides-per-view=\\"3\\" navigation=\\"true\\" pagination=\\"true\\">
  <swiper-slide>Slide 1</swiper-slide>
  <swiper-slide>Slide 2</swiper-slide>
  <swiper-slide>Slide 3</swiper-slide>
</swiper-container>
"
`;

exports[`Liquid > svelte > Javascript Test > basic 1`] = `
"<div>
  <input value=\\"{{name}}\\" />

  Hello! I can run in React, Vue, Solid, or Liquid!
</div>
"
`;

exports[`Liquid > svelte > Javascript Test > bindGroup 1`] = `
"<div>
  <input type=\\"radio\\" value=\\"Plain\\" />
  <input type=\\"radio\\" value=\\"Whole wheat\\" />
  <input type=\\"radio\\" value=\\"Spinach\\" />
  <br />
  <br />
  <input type=\\"checkbox\\" value=\\"Rice\\" />
  <input type=\\"checkbox\\" value=\\"Beans\\" />
  <input type=\\"checkbox\\" value=\\"Cheese\\" />
  <input type=\\"checkbox\\" value=\\"Guac (extra)\\" />
  <p>Tortilla: {{tortilla}}</p>
  <p>Fillings: {{fillings}}</p>
</div>
"
`;

exports[`Liquid > svelte > Javascript Test > bindProperty 1`] = `
"<input value=\\"{{value}}\\" />
"
`;

exports[`Liquid > svelte > Javascript Test > classDirective 1`] = `
"<input />
"
`;

exports[`Liquid > svelte > Javascript Test > context 1`] = `
"<div>{{activeTab}}</div>
"
`;

exports[`Liquid > svelte > Javascript Test > each 1`] = `
"<ul>
  {% for num in numbers %}
  <li>{{num}}</li>
  {% endfor %}
</ul>
"
`;

exports[`Liquid > svelte > Javascript Test > eventHandlers 1`] = `
"<div>
  <button>Log</button>
  <button>Log</button>
  <button>Log</button>
</div>
"
`;

exports[`Liquid > svelte > Javascript Test > html 1`] = `
"<div innerHTML=\\"{{html}}\\"></div>
"
`;

exports[`Liquid > svelte > Javascript Test > ifElse 1`] = `
"{% if show %}
<button>Hide</button>
{% endif %}
"
`;

exports[`Liquid > svelte > Javascript Test > imports 1`] = `
"<div>
  <button type=\\"button\\" disabled=\\"{{disabled}}\\"><slot></slot></button>
</div>
"
`;

exports[`Liquid > svelte > Javascript Test > lifecycleHooks 1`] = `
"<div></div>
"
`;

exports[`Liquid > svelte > Javascript Test > reactive 1`] = `
"<div>
  <input value=\\"{{name}}\\" />

  Lowercase: {{lowercaseName}}
</div>
"
`;

exports[`Liquid > svelte > Javascript Test > reactiveWithFn 1`] = `
"<div>
  <input type=\\"number\\" value=\\"{{a}}\\" />
  <input type=\\"number\\" value=\\"{{b}}\\" />

  Result: {{result}}
</div>
"
`;

exports[`Liquid > svelte > Javascript Test > slots 1`] = `
"<div>
  <slot>default</slot>
  <slot name=\\"Test\\"><div>default</div></slot>
</div>
"
`;

exports[`Liquid > svelte > Javascript Test > style 1`] = `
"<input class=\\"form-input\\" />
<style>
  input {
    color: red;
    font-size: 12px;
  }

  .form-input:focus {
    outline: 1px solid blue;
  }
</style>
"
`;

exports[`Liquid > svelte > Javascript Test > textExpressions 1`] = `
"<div>
  normal:

  <br />

  conditional
</div>
"
`;

exports[`Liquid > svelte > Typescript Test > basic 1`] = `
"<div>
  <input value=\\"{{name}}\\" />

  Hello! I can run in React, Vue, Solid, or Liquid!
</div>
"
`;

exports[`Liquid > svelte > Typescript Test > bindGroup 1`] = `
"<div>
  <input type=\\"radio\\" value=\\"Plain\\" />
  <input type=\\"radio\\" value=\\"Whole wheat\\" />
  <input type=\\"radio\\" value=\\"Spinach\\" />
  <br />
  <br />
  <input type=\\"checkbox\\" value=\\"Rice\\" />
  <input type=\\"checkbox\\" value=\\"Beans\\" />
  <input type=\\"checkbox\\" value=\\"Cheese\\" />
  <input type=\\"checkbox\\" value=\\"Guac (extra)\\" />
  <p>Tortilla: {{tortilla}}</p>
  <p>Fillings: {{fillings}}</p>
</div>
"
`;

exports[`Liquid > svelte > Typescript Test > bindProperty 1`] = `
"<input value=\\"{{value}}\\" />
"
`;

exports[`Liquid > svelte > Typescript Test > classDirective 1`] = `
"<input />
"
`;

exports[`Liquid > svelte > Typescript Test > context 1`] = `
"<div>{{activeTab}}</div>
"
`;

exports[`Liquid > svelte > Typescript Test > each 1`] = `
"<ul>
  {% for num in numbers %}
  <li>{{num}}</li>
  {% endfor %}
</ul>
"
`;

exports[`Liquid > svelte > Typescript Test > eventHandlers 1`] = `
"<div>
  <button>Log</button>
  <button>Log</button>
  <button>Log</button>
</div>
"
`;

exports[`Liquid > svelte > Typescript Test > html 1`] = `
"<div innerHTML=\\"{{html}}\\"></div>
"
`;

exports[`Liquid > svelte > Typescript Test > ifElse 1`] = `
"{% if show %}
<button>Hide</button>
{% endif %}
"
`;

exports[`Liquid > svelte > Typescript Test > imports 1`] = `
"<div>
  <button type=\\"button\\" disabled=\\"{{disabled}}\\"><slot></slot></button>
</div>
"
`;

exports[`Liquid > svelte > Typescript Test > lifecycleHooks 1`] = `
"<div></div>
"
`;

exports[`Liquid > svelte > Typescript Test > reactive 1`] = `
"<div>
  <input value=\\"{{name}}\\" />

  Lowercase: {{lowercaseName}}
</div>
"
`;

exports[`Liquid > svelte > Typescript Test > reactiveWithFn 1`] = `
"<div>
  <input type=\\"number\\" value=\\"{{a}}\\" />
  <input type=\\"number\\" value=\\"{{b}}\\" />

  Result: {{result}}
</div>
"
`;

exports[`Liquid > svelte > Typescript Test > slots 1`] = `
"<div>
  <slot>default</slot>
  <slot name=\\"Test\\"><div>default</div></slot>
</div>
"
`;

exports[`Liquid > svelte > Typescript Test > style 1`] = `
"<input class=\\"form-input\\" />
<style>
  input {
    color: red;
    font-size: 12px;
  }

  .form-input:focus {
    outline: 1px solid blue;
  }
</style>
"
`;

exports[`Liquid > svelte > Typescript Test > textExpressions 1`] = `
"<div>
  normal:

  <br />

  conditional
</div>
"
`;
