// Vitest Snapshot v1

exports[`Vue > jsx > Javascript Test > AdvancedRef 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Basic 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Basic 2`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Basic Context 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Basic OnMount Update 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Basic Outputs 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"my-basic-outputs-component\\",

  props: [\\"onMessage\\", \\"onEvent\\", \\"message\\"],

  data() {
    return { name: \\"PatrickJS\\" };
  },

  mounted() {
    this.onMessage(this.name);
    this.onEvent(this.message);
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > Basic Outputs Meta 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"my-basic-outputs-component\\",

  props: [\\"onMessage\\", \\"onEvent\\", \\"message\\"],

  data() {
    return { name: \\"PatrickJS\\" };
  },

  mounted() {
    this.onMessage(this.name);
    this.onEvent(this.message);
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > BasicAttribute 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > BasicBooleanAttribute 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > BasicChildComponent 1`] = `
"<template>
  <div>
    <div></div>
    <my-basic-component :id=\\"dev\\"></my-basic-component>
    <div></div>
    <div>
      <div></div>
      <my-basic-on-mount-update-component
        :hi=\\"name\\"
        :bye=\\"dev\\"
      ></my-basic-on-mount-update-component>
      <div></div>
    </div>
    <div></div>
  </div>
</template>

<script>
import MyBasicComponent from \\"./basic.raw\\";
import MyBasicOnMountUpdateComponent from \\"./basic-onMount-update.raw\\";

export default {
  name: \\"my-basic-child-component\\",
  components: {
    MyBasicComponent: MyBasicComponent,
    MyBasicOnMountUpdateComponent: MyBasicOnMountUpdateComponent,
  },

  data() {
    return { name: \\"Steve\\", dev: \\"PatrickJS\\" };
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > BasicFor 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > BasicRef 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > BasicRefAssignment 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > BasicRefPrevious 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Button 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Columns 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > ContentSlotHtml 1`] = `
"<template>
  <div>
    <div></div>
    <slot name=\\"testing\\"></slot>
    <div></div>
    <div>
      <div></div>
      <hr />
      <div></div>
    </div>
    <div></div>
    <div>
      <div></div>
      <slot />
      <div></div>
    </div>
    <div></div>
  </div>
</template>

<script>
export default {
  name: \\"content-slot-code\\",
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > ContentSlotJSX 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > CustomCode 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Embed 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Form 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Image 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Image State 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Img 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Input 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > RawText 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Section 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Section 2`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Select 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > SlotDefault 1`] = `
"<template>
  <div>
    <div></div>
    <slot
      ><div></div>
      <div><div></div></div>
      <div></div
    ></slot>
    <div></div>
  </div>
</template>

<script>
export default {
  name: \\"slot-code\\",
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > SlotHtml 1`] = `
"<template>
  <div>
    <div></div>
    <content-slot-code
      ><div></div>
      <template #testing>
        <div>Hello</div>
      </template>
      <div></div
    ></content-slot-code>
    <div></div>
  </div>
</template>

<script>
import ContentSlotCode from \\"./content-slot-jsx.raw\\";

export default {
  name: \\"slot-code\\",
  components: { ContentSlotCode: ContentSlotCode },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > SlotJsx 1`] = `
"<template>
  <div>
    <div></div>
    <content-slot-code :slotTesting=\\"<div>Hello</div>\\"></content-slot-code>
    <div></div>
  </div>
</template>

<script>
import ContentSlotCode from \\"./content-slot-jsx.raw\\";

export default {
  name: \\"slot-code\\",
  components: { ContentSlotCode: ContentSlotCode },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > SlotNamed 1`] = `
"<template>
  <div>
    <div></div>
    <slot name=\\"top\\"></slot>
    <div></div>
    <slot name=\\"left\\"><div></div></slot>
    <div></div>
    <slot><div></div></slot>
    <div></div>
  </div>
</template>

<script>
export default {
  name: \\"slot-code\\",
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > Stamped.io 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Submit 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Text 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Textarea 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > Video 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > arrowFunctionInUseStore 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > basicForwardRef 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > basicForwardRefMetadata 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > basicOnUpdateReturn 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > camelCasedAttributes 1`] = `
"<template>
  <div>
    <div></div>
    <img srcset=\\"http://example.com\\" />
    <div></div>
  </div>
</template>

<script>
import React from \\"@builder.io/react\\";

export default {
  name: \\"my-component\\",

  data() {
    return { name: \\"Steve\\" };
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > class + ClassName + css 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > class + css 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > className + css 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > className 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > classState 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > componentWithContext 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > componentWithContextMultiRoot 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > contentState 1`] = `
"<template>
  <div><div></div></div>
</template>

<script>
import BuilderContext from \\"@dummy/context.vue\\";

export default {
  name: \\"render-content\\",
  components: { BuilderContext: BuilderContext },
  props: [\\"content\\", \\"customComponents\\"],

  provide() {
    const _this = this;
    return {
      [BuilderContext.key]: {
        content: _this.content,
        registeredComponents: _this.customComponents,
      },
    };
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > defaultProps 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > defaultPropsOutsideComponent 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > defaultValsWithTypes 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > expressionState 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > import types 1`] = `
"<template>
  <render-block
    v-bind=\\"getRenderContentProps(renderContentProps.block, 0)\\"
  ></render-block>
</template>

<script>
import RenderBlock from \\"./builder-render-block.raw\\";

export default {
  name: \\"render-content\\",
  components: { RenderBlock: RenderBlock },
  props: [\\"renderContentProps\\"],

  methods: {
    getRenderContentProps(block, index) {
      return {
        block: block,
        index: index,
      };
    },
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > multipleOnUpdate 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"multiple-on-update\\",

  updated() {
    console.log(\\"Runs on every update/rerender\\");
    console.log(\\"Runs on every update/rerender as well\\");
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > multipleOnUpdateWithDeps 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"multiple-on-update-with-deps\\",

  data() {
    return { a: \\"a\\", b: \\"b\\", c: \\"c\\", d: \\"d\\" };
  },

  watch: {
    onUpdateHook0: {
      handler() {
        console.log(\\"Runs when a or b changes\\", this.a, this.b);

        if (this.a === \\"a\\") {
          this.a = \\"b\\";
        }
      },
      immediate: true,
    },
    onUpdateHook1: {
      handler() {
        console.log(\\"Runs when c or d changes\\", this.c, this.d);

        if (this.a === \\"a\\") {
          this.a = \\"b\\";
        }
      },
      immediate: true,
    },
  },

  computed: {
    onUpdateHook0() {
      return {
        0: this.a,
        1: this.b,
      };
    },
    onUpdateHook1() {
      return {
        0: this.c,
        1: this.d,
      };
    },
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > multipleSpreads 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > nestedShow 1`] = `
"<template>
  <div v-if=\\"conditionA\\"></div>
  <div v-else><div></div></div>
</template>

<script>
export default {
  name: \\"nested-show\\",

  props: [\\"conditionA\\", \\"conditionB\\"],
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > nestedStyles 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > onInit & onMount 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"on-init\\",

  created() {
    console.log(\\"onInit\\");
  },
  mounted() {
    console.log(\\"onMount\\");
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > onInit 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > onMount 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"comp\\",

  mounted() {
    console.log(\\"Runs on mount\\");
  },

  unmounted() {
    console.log(\\"Runs on unMount\\");
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > onUpdate 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"on-update\\",

  updated() {
    console.log(\\"Runs on every update/rerender\\");
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > onUpdateWithDeps 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"on-update-with-deps\\",

  props: [\\"size\\"],

  data() {
    return { a: \\"a\\", b: \\"b\\" };
  },

  watch: {
    onUpdateHook0: {
      handler() {
        console.log(
          \\"Runs when a, b or size changes\\",
          this.a,
          this.b,
          this.size
        );
      },
      immediate: true,
    },
  },

  computed: {
    onUpdateHook0() {
      return {
        0: this.a,
        1: this.b,
        2: this.size,
      };
    },
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > preserveExportOrLocalStatement 1`] = `
"<template>
  <div></div>
</template>

<script>
const b = 3;
const foo = () => {};
export const a = 3;
export const bar = () => {};
export function run<T>(value: T) {}

export default {
  name: \\"my-basic-component\\",
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > preserveTyping 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > propsDestructure 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > propsInterface 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > propsType 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > referencingFunInsideHook 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"on-update\\",

  updated() {
    this.foo({
      someOption: this.bar,
    });
  },

  methods: {
    foo: function foo(params) {},
    bar: function bar() {},
    zoo: function zoo() {
      const params = {
        cb: this.bar,
      };
    },
  },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > renderBlock 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > renderContentExample 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > rootFragmentMultiNode 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > rootShow 1`] = `
"<template>
  <div v-if=\\"foo === 'bar'\\"></div>
  <div v-else><div></div></div>
</template>

<script>
export default {
  name: \\"render-styles\\",

  props: [\\"foo\\"],
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > self-referencing component 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > self-referencing component with children 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > showWithFor 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > spreadAttrs 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > spreadNestedProps 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > spreadProps 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > styleClassAndCss 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > subComponent 1`] = `
"<template>
  <foo></foo>
</template>

<script>
import Foo from \\"./foo-sub-component.vue\\";

export default {
  name: \\"sub-component\\",
  components: { Foo: Foo },
};
</script>"
`;

exports[`Vue > jsx > Javascript Test > svgComponent 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > typeDependency 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > use-style 1`] = `
"<template>
  <button><div></div></button>
</template>

<script>
export default {
  name: \\"my-component\\",
};
</script>

<style scoped>
button {
  background: blue;
  color: white;
  font-size: 12px;
  outline: 1px solid black;
}
</style>"
`;

exports[`Vue > jsx > Javascript Test > use-style-and-css 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Javascript Test > use-style-outside-component 1`] = `
"<template>
  <button><div></div></button>
</template>

<script>
export default {
  name: \\"my-component\\",
};
</script>

<style scoped>
button {
  background: blue;
  color: white;
  font-size: 12px;
  outline: 1px solid black;
}
</style>"
`;

exports[`Vue > jsx > Typescript Test > AdvancedRef 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Basic 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Basic 2`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Basic Context 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Basic OnMount Update 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Basic Outputs 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"my-basic-outputs-component\\",

  props: [\\"onMessage\\", \\"onEvent\\", \\"message\\"],

  data() {
    return { name: \\"PatrickJS\\" };
  },

  mounted() {
    this.onMessage(this.name);
    this.onEvent(this.message);
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > Basic Outputs Meta 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"my-basic-outputs-component\\",

  props: [\\"onMessage\\", \\"onEvent\\", \\"message\\"],

  data() {
    return { name: \\"PatrickJS\\" };
  },

  mounted() {
    this.onMessage(this.name);
    this.onEvent(this.message);
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > BasicAttribute 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > BasicBooleanAttribute 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > BasicChildComponent 1`] = `
"<template>
  <div>
    <div></div>
    <my-basic-component :id=\\"dev\\"></my-basic-component>
    <div></div>
    <div>
      <div></div>
      <my-basic-on-mount-update-component
        :hi=\\"name\\"
        :bye=\\"dev\\"
      ></my-basic-on-mount-update-component>
      <div></div>
    </div>
    <div></div>
  </div>
</template>

<script lang=\\"ts\\">
import MyBasicComponent from \\"./basic.raw\\";
import MyBasicOnMountUpdateComponent from \\"./basic-onMount-update.raw\\";

export default {
  name: \\"my-basic-child-component\\",
  components: {
    MyBasicComponent: MyBasicComponent,
    MyBasicOnMountUpdateComponent: MyBasicOnMountUpdateComponent,
  },

  data() {
    return { name: \\"Steve\\", dev: \\"PatrickJS\\" };
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > BasicFor 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > BasicRef 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > BasicRefAssignment 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > BasicRefPrevious 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Button 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Columns 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > ContentSlotHtml 1`] = `
"<template>
  <div>
    <div></div>
    <slot name=\\"testing\\"></slot>
    <div></div>
    <div>
      <div></div>
      <hr />
      <div></div>
    </div>
    <div></div>
    <div>
      <div></div>
      <slot />
      <div></div>
    </div>
    <div></div>
  </div>
</template>

<script lang=\\"ts\\">
type Props = {
  [key: string]: string | JSX.Element;
  slotTesting: JSX.Element;
};

export default {
  name: \\"content-slot-code\\",
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > ContentSlotJSX 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > CustomCode 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Embed 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Form 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Image 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Image State 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Img 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Input 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > RawText 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Section 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Section 2`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Select 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > SlotDefault 1`] = `
"<template>
  <div>
    <div></div>
    <slot
      ><div></div>
      <div><div></div></div>
      <div></div
    ></slot>
    <div></div>
  </div>
</template>

<script lang=\\"ts\\">
type Props = {
  [key: string]: string;
};

export default {
  name: \\"slot-code\\",
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > SlotHtml 1`] = `
"<template>
  <div>
    <div></div>
    <content-slot-code
      ><div></div>
      <template #testing>
        <div>Hello</div>
      </template>
      <div></div
    ></content-slot-code>
    <div></div>
  </div>
</template>

<script lang=\\"ts\\">
type Props = {
  [key: string]: string;
};

import ContentSlotCode from \\"./content-slot-jsx.raw\\";

export default {
  name: \\"slot-code\\",
  components: { ContentSlotCode: ContentSlotCode },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > SlotJsx 1`] = `
"<template>
  <div>
    <div></div>
    <content-slot-code :slotTesting=\\"<div>Hello</div>\\"></content-slot-code>
    <div></div>
  </div>
</template>

<script lang=\\"ts\\">
type Props = {
  [key: string]: string;
};

import ContentSlotCode from \\"./content-slot-jsx.raw\\";

export default {
  name: \\"slot-code\\",
  components: { ContentSlotCode: ContentSlotCode },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > SlotNamed 1`] = `
"<template>
  <div>
    <div></div>
    <slot name=\\"top\\"></slot>
    <div></div>
    <slot name=\\"left\\"><div></div></slot>
    <div></div>
    <slot><div></div></slot>
    <div></div>
  </div>
</template>

<script lang=\\"ts\\">
type Props = {
  [key: string]: string;
};

export default {
  name: \\"slot-code\\",
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > Stamped.io 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Submit 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Text 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Textarea 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > Video 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > arrowFunctionInUseStore 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > basicForwardRef 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > basicForwardRefMetadata 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > basicOnUpdateReturn 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > camelCasedAttributes 1`] = `
"<template>
  <div>
    <div></div>
    <img srcset=\\"http://example.com\\" />
    <div></div>
  </div>
</template>

<script lang=\\"ts\\">
import React from \\"@builder.io/react\\";

export default {
  name: \\"my-component\\",

  data() {
    return { name: \\"Steve\\" };
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > class + ClassName + css 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > class + css 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > className + css 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > className 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > classState 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > componentWithContext 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > componentWithContextMultiRoot 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > contentState 1`] = `
"<template>
  <div><div></div></div>
</template>

<script lang=\\"ts\\">
import BuilderContext from \\"@dummy/context.vue\\";

export default {
  name: \\"render-content\\",
  components: { BuilderContext: BuilderContext },
  props: [\\"content\\", \\"customComponents\\"],

  provide() {
    const _this = this;
    return {
      [BuilderContext.key]: {
        content: _this.content,
        registeredComponents: _this.customComponents,
      },
    };
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > defaultProps 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > defaultPropsOutsideComponent 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > defaultValsWithTypes 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > expressionState 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > import types 1`] = `
"<template>
  <render-block
    v-bind=\\"getRenderContentProps(renderContentProps.block, 0)\\"
  ></render-block>
</template>

<script lang=\\"ts\\">
type RenderContentProps = {
  options?: GetContentOptions;
  content: BuilderContent;
  renderContentProps: RenderBlockProps;
};

import RenderBlock from \\"./builder-render-block.raw\\";

export default {
  name: \\"render-content\\",
  components: { RenderBlock: RenderBlock },
  props: [\\"renderContentProps\\"],

  methods: {
    getRenderContentProps(block, index) {
      return {
        block: block,
        index: index,
      };
    },
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > multipleOnUpdate 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"multiple-on-update\\",

  updated() {
    console.log(\\"Runs on every update/rerender\\");
    console.log(\\"Runs on every update/rerender as well\\");
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > multipleOnUpdateWithDeps 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"multiple-on-update-with-deps\\",

  data() {
    return { a: \\"a\\", b: \\"b\\", c: \\"c\\", d: \\"d\\" };
  },

  watch: {
    onUpdateHook0: {
      handler() {
        console.log(\\"Runs when a or b changes\\", this.a, this.b);

        if (this.a === \\"a\\") {
          this.a = \\"b\\";
        }
      },
      immediate: true,
    },
    onUpdateHook1: {
      handler() {
        console.log(\\"Runs when c or d changes\\", this.c, this.d);

        if (this.a === \\"a\\") {
          this.a = \\"b\\";
        }
      },
      immediate: true,
    },
  },

  computed: {
    onUpdateHook0() {
      return {
        0: this.a,
        1: this.b,
      };
    },
    onUpdateHook1() {
      return {
        0: this.c,
        1: this.d,
      };
    },
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > multipleSpreads 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > nestedShow 1`] = `
"<template>
  <div v-if=\\"conditionA\\"></div>
  <div v-else><div></div></div>
</template>

<script lang=\\"ts\\">
interface Props {
  conditionA: boolean;
  conditionB: boolean;
}

export default {
  name: \\"nested-show\\",

  props: [\\"conditionA\\", \\"conditionB\\"],
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > nestedStyles 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > onInit & onMount 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"on-init\\",

  created() {
    console.log(\\"onInit\\");
  },
  mounted() {
    console.log(\\"onMount\\");
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > onInit 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > onMount 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"comp\\",

  mounted() {
    console.log(\\"Runs on mount\\");
  },

  unmounted() {
    console.log(\\"Runs on unMount\\");
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > onUpdate 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"on-update\\",

  updated() {
    console.log(\\"Runs on every update/rerender\\");
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > onUpdateWithDeps 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
type Props = {
  size: string;
};

export default {
  name: \\"on-update-with-deps\\",

  props: [\\"size\\"],

  data() {
    return { a: \\"a\\", b: \\"b\\" };
  },

  watch: {
    onUpdateHook0: {
      handler() {
        console.log(
          \\"Runs when a, b or size changes\\",
          this.a,
          this.b,
          this.size
        );
      },
      immediate: true,
    },
  },

  computed: {
    onUpdateHook0() {
      return {
        0: this.a,
        1: this.b,
        2: this.size,
      };
    },
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > preserveExportOrLocalStatement 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
type Types = {
  s: any[];
};
interface IPost {
  len: number;
}
export interface MyBasicComponentProps {
  id: string;
}

const b = 3;
const foo = () => {};
export const a = 3;
export const bar = () => {};
export function run<T>(value: T) {}

export default {
  name: \\"my-basic-component\\",
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > preserveTyping 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > propsDestructure 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > propsInterface 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > propsType 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > referencingFunInsideHook 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"on-update\\",

  updated() {
    this.foo({
      someOption: this.bar,
    });
  },

  methods: {
    foo: function foo(params) {},
    bar: function bar() {},
    zoo: function zoo() {
      const params = {
        cb: this.bar,
      };
    },
  },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > renderBlock 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > renderContentExample 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > rootFragmentMultiNode 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > rootShow 1`] = `
"<template>
  <div v-if=\\"foo === 'bar'\\"></div>
  <div v-else><div></div></div>
</template>

<script lang=\\"ts\\">
export interface RenderStylesProps {
  foo: string;
}

export default {
  name: \\"render-styles\\",

  props: [\\"foo\\"],
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > self-referencing component 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > self-referencing component with children 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > showWithFor 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > spreadAttrs 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > spreadNestedProps 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > spreadProps 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > styleClassAndCss 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > subComponent 1`] = `
"<template>
  <foo></foo>
</template>

<script lang=\\"ts\\">
import Foo from \\"./foo-sub-component.vue\\";

export default {
  name: \\"sub-component\\",
  components: { Foo: Foo },
};
</script>"
`;

exports[`Vue > jsx > Typescript Test > svgComponent 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > typeDependency 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > use-style 1`] = `
"<template>
  <button><div></div></button>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"my-component\\",
};
</script>

<style scoped>
button {
  background: blue;
  color: white;
  font-size: 12px;
  outline: 1px solid black;
}
</style>"
`;

exports[`Vue > jsx > Typescript Test > use-style-and-css 1`] = `"newKew is not defined"`;

exports[`Vue > jsx > Typescript Test > use-style-outside-component 1`] = `
"<template>
  <button><div></div></button>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"my-component\\",
};
</script>

<style scoped>
button {
  background: blue;
  color: white;
  font-size: 12px;
  outline: 1px solid black;
}
</style>"
`;

exports[`Vue > svelte > Javascript Test > basic 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > bindGroup 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > bindProperty 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > classDirective 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > context 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > each 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > eventHandlers 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > html 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > ifElse 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > imports 1`] = `
"<template>
  <div>
    <button type=\\"button\\" :disabled=\\"disabled\\"><slot /></button>
  </div>
</template>

<script>
import Button from \\"./Button.vue\\";

export default {
  name: \\"my-component\\",
  components: { Button: Button },

  data() {
    return { disabled: false };
  },
};
</script>"
`;

exports[`Vue > svelte > Javascript Test > lifecycleHooks 1`] = `
"<template>
  <div></div>
</template>

<script>
export default {
  name: \\"my-component\\",

  mounted() {
    console.log(\\"onMount\\");
  },
  updated() {
    console.log(\\"onAfterUpdate\\");
  },

  unmounted() {
    console.log(\\"onDestroy\\");
  },
};
</script>"
`;

exports[`Vue > svelte > Javascript Test > reactive 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > reactiveWithFn 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Javascript Test > slots 1`] = `
"<template>
  <div>
    <slot><div></div></slot
    ><slot name=\\"test\\"
      ><div><div></div></div
    ></slot>
  </div>
</template>

<script>
export default {
  name: \\"my-component\\",
};
</script>"
`;

exports[`Vue > svelte > Javascript Test > style 1`] = `
"<template>
  <input />
</template>

<script>
export default {
  name: \\"my-component\\",
};
</script>

<style scoped>
input {
  color: red;
  font-size: 12px;
}

.form-input:focus {
  outline: 1px solid blue;
}
</style>"
`;

exports[`Vue > svelte > Javascript Test > textExpressions 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > basic 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > bindGroup 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > bindProperty 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > classDirective 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > context 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > each 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > eventHandlers 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > html 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > ifElse 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > imports 1`] = `
"<template>
  <div>
    <button type=\\"button\\" :disabled=\\"disabled\\"><slot /></button>
  </div>
</template>

<script lang=\\"ts\\">
import Button from \\"./Button.vue\\";

export default {
  name: \\"my-component\\",
  components: { Button: Button },

  data() {
    return { disabled: false };
  },
};
</script>"
`;

exports[`Vue > svelte > Typescript Test > lifecycleHooks 1`] = `
"<template>
  <div></div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"my-component\\",

  mounted() {
    console.log(\\"onMount\\");
  },
  updated() {
    console.log(\\"onAfterUpdate\\");
  },

  unmounted() {
    console.log(\\"onDestroy\\");
  },
};
</script>"
`;

exports[`Vue > svelte > Typescript Test > reactive 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > reactiveWithFn 1`] = `"newKew is not defined"`;

exports[`Vue > svelte > Typescript Test > slots 1`] = `
"<template>
  <div>
    <slot><div></div></slot
    ><slot name=\\"test\\"
      ><div><div></div></div
    ></slot>
  </div>
</template>

<script lang=\\"ts\\">
export default {
  name: \\"my-component\\",
};
</script>"
`;

exports[`Vue > svelte > Typescript Test > style 1`] = `
"<template>
  <input />
</template>

<script lang=\\"ts\\">
export default {
  name: \\"my-component\\",
};
</script>

<style scoped>
input {
  color: red;
  font-size: 12px;
}

.form-input:focus {
  outline: 1px solid blue;
}
</style>"
`;

exports[`Vue > svelte > Typescript Test > textExpressions 1`] = `"newKew is not defined"`;
