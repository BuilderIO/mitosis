// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Qoot Todo 1`] = `
Object {
  "files": Array [
    Object {
      "contents": "import { injectMethod, QRL, jsxFactory } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

import { TodosState as todosState } from \\"../TodosState/public.js\\";

export default injectMethod(TodoComponent, function (this: TodoComponent) {
  return (
    <li
      class={\`\${this.todo.completed ? \\"completed\\" : \\"\\"} \${
        this.editing ? \\"editing\\" : \\"\\"
      }\`}
    >
      <div class=\\"view\\">
        <input
          class=\\"toggle\\"
          type=\\"checkbox\\"
          checked={this.todo.completed}
          on:click={QRL\`ui:/Todo/onInputClick\`}
        />

        <label on:dblclick={QRL\`ui:/Todo/onLabelDblClick\`}>
          {this.todo.text}
        </label>

        <button class=\\"destroy\\" on:click={QRL\`ui:/Todo/onButtonClick\`}></button>
      </div>

      {this.editing ? (
        <>
          <input
            class=\\"edit\\"
            value={this.todo.text}
            on:blur={QRL\`ui:/Todo/onInput2Blur\`}
            on:keyup={QRL\`ui:/Todo/onInput2KeyUp\`}
          />
        </>
      ) : undefined}
    </li>
  );
});
",
      "path": "Todo/template.tsx",
    },
    Object {
      "contents": "import { jsxDeclareComponent, QRL } from \\"@builder.io/qwik\\";

export const Todo = jsxDeclareComponent(QRL\`ui:/Todo/template\`, \\"todo\\");
",
      "path": "Todo/public.ts",
    },
    Object {
      "contents": "import { Component, QRL } from \\"@builder.io/qwik\\";

export class TodoComponent extends Component<any, any> {
  static $templateQRL = \\"ui:/Todo/template\\";

  editing = false;
  toggle() {
    this.todo.completed = !this.todo.completed;
  }

  $newState() {
    return {}; // TODO
  }
}
",
      "path": "Todo/component.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    this.toggle();
  }
);
",
      "path": "Todo/onInputClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    this.editing = true;
    markDirty(this);
  }
);
",
      "path": "Todo/onLabelDblClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    todosState.todos.splice(todosState.todos.indexOf(this.todo));
  }
);
",
      "path": "Todo/onButtonClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    this.editing = false;
    markDirty(this);
  }
);
",
      "path": "Todo/onInput2Blur.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    this.todo.text = event.target.value;
  }
);
",
      "path": "Todo/onInput2KeyUp.ts",
    },
  ],
}
`;

exports[`Qoot Todo bundle 1`] = `
Object {
  "files": Array [
    Object {
      "contents": "import { injectMethod, QRL, jsxFactory } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

import { TodosState as todosState } from \\"../TodosState/public.js\\";

export const template = injectMethod(
  TodoComponent,
  function (this: TodoComponent) {
    return (
      <li
        class={\`\${this.todo.completed ? \\"completed\\" : \\"\\"} \${
          this.editing ? \\"editing\\" : \\"\\"
        }\`}
      >
        <div class=\\"view\\">
          <input
            class=\\"toggle\\"
            type=\\"checkbox\\"
            checked={this.todo.completed}
            on:click={QRL\`ui:/Todo/bundle.onInputClick\`}
          />

          <label on:dblclick={QRL\`ui:/Todo/bundle.onLabelDblClick\`}>
            {this.todo.text}
          </label>

          <button
            class=\\"destroy\\"
            on:click={QRL\`ui:/Todo/bundle.onButtonClick\`}
          ></button>
        </div>

        {this.editing ? (
          <>
            <input
              class=\\"edit\\"
              value={this.todo.text}
              on:blur={QRL\`ui:/Todo/bundle.onInput2Blur\`}
              on:keyup={QRL\`ui:/Todo/bundle.onInput2KeyUp\`}
            />
          </>
        ) : undefined}
      </li>
    );
  }
);
",
      "path": "Todo/template.tsx",
    },
    Object {
      "contents": "import { jsxDeclareComponent, QRL } from \\"@builder.io/qwik\\";

export const Todo = jsxDeclareComponent(QRL\`ui:/Todo/bundle.template\`, \\"todo\\");
",
      "path": "Todo/public.ts",
    },
    Object {
      "contents": "import { Component, QRL } from \\"@builder.io/qwik\\";

export class TodoComponent extends Component<any, any> {
  static $templateQRL = \\"ui:/Todo/bundle.template\\";

  editing = false;
  toggle() {
    this.todo.completed = !this.todo.completed;
  }

  $newState() {
    return {}; // TODO
  }
}
",
      "path": "Todo/component.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export const onInputClick = injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    this.toggle();
  }
);
",
      "path": "Todo/onInputClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export const onLabelDblClick = injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    this.editing = true;
    markDirty(this);
  }
);
",
      "path": "Todo/onLabelDblClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export const onButtonClick = injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    todosState.todos.splice(todosState.todos.indexOf(this.todo));
  }
);
",
      "path": "Todo/onButtonClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export const onInput2Blur = injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    this.editing = false;
    markDirty(this);
  }
);
",
      "path": "Todo/onInput2Blur.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodoComponent } from \\"./component.js\\";

export const onInput2KeyUp = injectEventHandler(
  TodoComponent,
  provideEvent(),
  async function (this: TodoComponent, event: Event) {
    this.todo.text = event.target.value;
  }
);
",
      "path": "Todo/onInput2KeyUp.ts",
    },
    Object {
      "contents": "import { Component, injectMethod, jsxFactory, QRL, injectEventHandler, provideEvent, markDirty } from '@builder.io/qwik';

function _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
class TodoComponent$1 extends Component {
  constructor(...args) {
    super(...args);

    _defineProperty$1(this, \\"editing\\", false);
  }

  toggle() {
    this.todo.completed = !this.todo.completed;
  }

  $newState() {
    return {}; // TODO
  }

}

_defineProperty$1(TodoComponent$1, \\"$templateQRL\\", \\"ui:/Todo/bundle.template\\");

const template = injectMethod(TodoComponent$1, function () {
  return jsxFactory(\\"li\\", {
    class: \`\${this.todo.completed ? \\"completed\\" : \\"\\"} \${this.editing ? \\"editing\\" : \\"\\"}\`
  }, jsxFactory(\\"div\\", {
    class: \\"view\\"
  }, jsxFactory(\\"input\\", {
    class: \\"toggle\\",
    type: \\"checkbox\\",
    checked: this.todo.completed,
    \\"on:click\\": QRL\`ui:/Todo/bundle.onInputClick\`
  }), jsxFactory(\\"label\\", {
    \\"on:dblclick\\": QRL\`ui:/Todo/bundle.onLabelDblClick\`
  }, this.todo.text), jsxFactory(\\"button\\", {
    class: \\"destroy\\",
    \\"on:click\\": QRL\`ui:/Todo/bundle.onButtonClick\`
  })), this.editing ? jsxFactory(null, null, jsxFactory(\\"input\\", {
    class: \\"edit\\",
    value: this.todo.text,
    \\"on:blur\\": QRL\`ui:/Todo/bundle.onInput2Blur\`,
    \\"on:keyup\\": QRL\`ui:/Todo/bundle.onInput2KeyUp\`
  })) : undefined);
});

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
class TodoComponent extends Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, \\"editing\\", false);
  }

  toggle() {
    this.todo.completed = !this.todo.completed;
  }

  $newState() {
    return {}; // TODO
  }

}

_defineProperty(TodoComponent, \\"$templateQRL\\", \\"ui:/Todo/bundle.template\\");

const onInputClick = injectEventHandler(TodoComponent$1, provideEvent(), async function (event) {
  this.toggle();
});

const onLabelDblClick = injectEventHandler(TodoComponent$1, provideEvent(), async function (event) {
  this.editing = true;
  markDirty(this);
});

const onButtonClick = injectEventHandler(TodoComponent$1, provideEvent(), async function (event) {
  todosState.todos.splice(todosState.todos.indexOf(this.todo));
});

const onInput2Blur = injectEventHandler(TodoComponent$1, provideEvent(), async function (event) {
  this.editing = false;
  markDirty(this);
});

const onInput2KeyUp = injectEventHandler(TodoComponent$1, provideEvent(), async function (event) {
  this.todo.text = event.target.value;
});

export { TodoComponent, onButtonClick, onInput2Blur, onInput2KeyUp, onInputClick, onLabelDblClick, template };
",
      "path": "Todo/bundle.js",
    },
  ],
}
`;

exports[`Qoot Todos 1`] = `
Object {
  "files": Array [
    Object {
      "contents": "import { injectMethod, QRL, jsxFactory } from \\"@builder.io/qwik\\";
import { TodosComponent } from \\"./component.js\\";

import { TodosState as todosState } from \\"../TodosState/public.js\\";
import { Todo } from \\"../Todo/public.js\\";

export default injectMethod(TodosComponent, function (this: TodosComponent) {
  return (
    <section class=\\"main\\">
      {todosState.todos.length ? (
        <>
          <input
            class=\\"toggle-all\\"
            type=\\"checkbox\\"
            checked={todosState.allCompleted}
            on:click={QRL\`ui:/Todos/onInputClick\`}
          />
        </>
      ) : undefined}

      <ul class=\\"todo-list\\">
        {todosState.todos.map((todo) => (
          <>
            <Todo todo={todo}></Todo>
          </>
        ))}
      </ul>
    </section>
  );
});
",
      "path": "Todos/template.tsx",
    },
    Object {
      "contents": "import { jsxDeclareComponent, QRL } from \\"@builder.io/qwik\\";

export const Todos = jsxDeclareComponent(QRL\`ui:/Todos/template\`, \\"todos\\");
",
      "path": "Todos/public.ts",
    },
    Object {
      "contents": "import { Component, QRL } from \\"@builder.io/qwik\\";

export class TodosComponent extends Component<any, any> {
  static $templateQRL = \\"ui:/Todos/template\\";

  $newState() {
    return {}; // TODO
  }
}
",
      "path": "Todos/component.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideEvent, markDirty } from \\"@builder.io/qwik\\";
import { TodosComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodosComponent,
  provideEvent(),
  async function (this: TodosComponent, event: Event) {
    const newValue = !todosState.allCompleted;

    for (const todoItem of todosState.todos) {
      todoItem.completed = newValue;
    }
  }
);
",
      "path": "Todos/onInputClick.ts",
    },
  ],
}
`;
