// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parse JSX metadata 1`] = `
Object {
  "@type": "@jsx-lite/component",
  "children": Array [
    Object {
      "@type": "@jsx-lite/node",
      "bindings": Object {},
      "children": Array [
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {
            "when": "props.link",
          },
          "children": Array [
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
        ",
              },
            },
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {
                "_spread": "props.attributes",
                "href": "props.link",
                "target": "props.openLinkInNewTab ? '_blank' : undefined",
              },
              "children": Array [
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
          ",
                  },
                },
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {
                    "_text": "props.text",
                  },
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {},
                },
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
        ",
                  },
                },
              ],
              "meta": Object {},
              "name": "a",
              "properties": Object {},
            },
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
      ",
              },
            },
          ],
          "meta": Object {},
          "name": "Show",
          "properties": Object {},
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {
            "when": "!props.link",
          },
          "children": Array [
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
        ",
              },
            },
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {
                "_spread": "props.attributes",
              },
              "children": Array [
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
          ",
                  },
                },
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {
                    "_text": "props.text",
                  },
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {},
                },
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
        ",
                  },
                },
              ],
              "meta": Object {},
              "name": "button",
              "properties": Object {
                "type": "button",
              },
            },
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
      ",
              },
            },
          ],
          "meta": Object {},
          "name": "Show",
          "properties": Object {},
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
    ",
          },
        },
      ],
      "meta": Object {},
      "name": "Fragment",
      "properties": Object {},
    },
  ],
  "hooks": Object {},
  "imports": Array [],
  "meta": Object {
    "metadataHook": Object {
      "foo": Object {
        "bar": "baz",
      },
    },
  },
  "name": "Button",
  "state": Object {},
  "subComponents": Array [],
}
`;

exports[`React JSX parse function component 1`] = `
Object {
  "@type": "@jsx-lite/component",
  "children": Array [
    Object {
      "@type": "@jsx-lite/node",
      "bindings": Object {},
      "children": Array [
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {
            "onChange": "state.setName(event.target.value)",
            "value": "name",
          },
          "children": Array [],
          "meta": Object {},
          "name": "input",
          "properties": Object {},
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "

      ",
          },
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "input",
          "properties": Object {
            "checked": "checked",
            "disabled": "disabled",
            "name": "scales",
            "type": "checkbox",
          },
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "

      ",
          },
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {
            "class": "className",
          },
          "children": Array [
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
        Hello! I can run in React, Vue, Solid, or Liquid!
      ",
              },
            },
          ],
          "meta": Object {},
          "name": "span",
          "properties": Object {},
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {
            "height": "120",
            "width": "120",
          },
          "children": Array [
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
        ",
              },
            },
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {},
              "children": Array [
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
          ",
                  },
                },
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "animatetransform",
                  "properties": Object {
                    "attributeName": "transform",
                    "attributeType": "XML",
                    "dur": "10s",
                    "from": "0 60 70",
                    "repeatCount": "indefinite",
                    "to": "360 60 70",
                    "type": "rotate",
                  },
                },
                Object {
                  "@type": "@jsx-lite/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
        ",
                  },
                },
              ],
              "meta": Object {},
              "name": "polygon",
              "properties": Object {
                "points": "60,30 90,90 30,90",
              },
            },
            Object {
              "@type": "@jsx-lite/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
      ",
              },
            },
          ],
          "meta": Object {},
          "name": "svg",
          "properties": Object {
            "viewBox": "0 0 120 120",
            "xmlns": "http://www.w3.org/2000/svg",
          },
        },
        Object {
          "@type": "@jsx-lite/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
    ",
          },
        },
      ],
      "meta": Object {},
      "name": "div",
      "properties": Object {
        "class": "container",
      },
    },
  ],
  "hooks": Object {},
  "imports": Array [],
  "meta": Object {},
  "name": "MyBasicComponent",
  "state": Object {
    "setName": "Steve",
  },
  "subComponents": Array [],
}
`;

exports[`React JSX parse function component 2`] = `
"<script>
  let setName = \\"Steve\\";

</script>

<div class=\\"container\\">
  <input value={name} on:change={(event) => setName(event.target.value)} />

  <input type=\\"checkbox\\" name=\\"scales\\" checked=\\"checked\\" disabled=\\"disabled\\" />

  <span class={className}>
    Hello! I can run in React, Vue, Solid, or Liquid!
  </span>

  <svg
    viewBox=\\"0 0 120 120\\"
    xmlns=\\"http://www.w3.org/2000/svg\\"
    width={120}
    height={120}>
    <polygon points=\\"60,30 90,90 30,90\\">
      <animatetransform
        attributeName=\\"transform\\"
        attributeType=\\"XML\\"
        type=\\"rotate\\"
        from=\\"0 60 70\\"
        to=\\"360 60 70\\"
        dur=\\"10s\\"
        repeatCount=\\"indefinite\\" />
    </polygon>
  </svg>
</div>
"
`;
