// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parse JSX Image 1`] = `
Object {
  "@type": "@builder.io/mitosis/component",
  "children": Array [
    Object {
      "@type": "@builder.io/mitosis/node",
      "bindings": Object {},
      "children": Array [
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {
            "ref": Object {
              "code": "pictureRef",
            },
          },
          "children": Array [
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
        ",
              },
              "scope": Object {},
            },
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {
                "when": Object {
                  "code": "!state.useLazyLoading() || state.load",
                },
              },
              "children": Array [
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
          ",
                  },
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {
                    "alt": Object {
                      "code": "props.altText",
                    },
                    "aria-role": Object {
                      "code": "props.altText ? 'presentation' : undefined",
                    },
                    "class": Object {
                      "code": "'builder-image' + (props.class ? ' ' + props.class : '')",
                    },
                    "css": Object {
                      "code": "{
  opacity: '1',
  transition: 'opacity 0.2s ease-in-out',
  objectFit: 'cover',
  objectPosition: 'center'
}",
                    },
                    "onLoad": Object {
                      "code": "state.setLoaded()",
                    },
                    "sizes": Object {
                      "code": "props.sizes",
                    },
                    "src": Object {
                      "code": "props.image",
                    },
                    "srcset": Object {
                      "code": "props.srcset",
                    },
                  },
                  "children": Array [],
                  "meta": Object {},
                  "name": "img",
                  "properties": Object {},
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
        ",
                  },
                  "scope": Object {},
                },
              ],
              "meta": Object {},
              "name": "Show",
              "properties": Object {},
              "scope": Object {},
            },
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
        ",
              },
              "scope": Object {},
            },
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {
                "srcset": Object {
                  "code": "props.srcset",
                },
              },
              "children": Array [],
              "meta": Object {},
              "name": "source",
              "properties": Object {},
              "scope": Object {},
            },
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
      ",
              },
              "scope": Object {},
            },
          ],
          "meta": Object {},
          "name": "picture",
          "properties": Object {},
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {
            "_text": Object {
              "code": "props.children",
            },
          },
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {},
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
    ",
          },
          "scope": Object {},
        },
      ],
      "meta": Object {},
      "name": "Fragment",
      "properties": Object {},
      "scope": Object {},
    },
  ],
  "context": Object {
    "get": Object {},
    "set": Object {},
  },
  "exports": Object {},
  "hooks": Object {
    "onMount": Object {
      "code": "
  if (state.useLazyLoading()) {
    // throttled scroll capture listener
    const listener = () => {
      if (pictureRef) {
        const rect = pictureRef.getBoundingClientRect();
        const buffer = window.innerHeight / 2;

        if (rect.top < window.innerHeight + buffer) {
          state.load = true;
          state.scrollListener = null;
          window.removeEventListener('scroll', listener);
        }
      }
    };

    state.scrollListener = listener;
    window.addEventListener('scroll', listener, {
      capture: true,
      passive: true
    });
    listener();
  }
",
    },
    "onUnMount": Object {
      "code": "
  if (state.scrollListener) {
    window.removeEventListener('scroll', state.scrollListener);
  }
",
    },
  },
  "imports": Array [],
  "inputs": Array [],
  "interfaces": Array [
    "// TODO: AMP Support?
export interface ImageProps {
  class?: string;
  image: string;
  sizes?: string;
  lazy?: boolean;
  height?: number;
  width?: number;
  altText?: string;
  backgroundSize?: string;
  backgroundPosition?: string; // TODO: Support generating Builder.io and or Shopify \`srcset\`s when needed

  srcset?: string; // TODO: Implement support for custom aspect ratios

  aspectRatio?: number; // TODO: This might not work as expected in terms of positioning

  children?: any;
}",
  ],
  "meta": Object {},
  "name": "Image",
  "propsTypeRef": "ImageProps",
  "refs": Object {
    "pictureRef": Object {
      "argument": "",
      "typeParameter": "HTMLElement",
    },
  },
  "state": Object {
    "imageLoaded": false,
    "isBrowser": "@builder.io/mitosis/method:isBrowser() {
  return typeof window !== 'undefined' && window.navigator.product != 'ReactNative';
}",
    "load": false,
    "scrollListener": null,
    "setLoaded": "@builder.io/mitosis/method:setLoaded() {
  state.imageLoaded = true;
}",
    "useLazyLoading": "@builder.io/mitosis/method:useLazyLoading() {
  // TODO: Add more checks here, like testing for real web browsers
  return !!props.lazy && state.isBrowser();
}",
  },
  "subComponents": Array [],
}
`;

exports[`Parse JSX custom mitosis package 1`] = `
Object {
  "@type": "@builder.io/mitosis/component",
  "children": Array [
    Object {
      "@type": "@builder.io/mitosis/node",
      "bindings": Object {},
      "children": Array [
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      Hello ",
          },
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {
            "_text": Object {
              "code": "state.name",
            },
          },
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {},
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "! I can run in React, Qwik, Vue, Solid, or Liquid!
    ",
          },
          "scope": Object {},
        },
      ],
      "meta": Object {},
      "name": "div",
      "properties": Object {},
      "scope": Object {},
    },
  ],
  "context": Object {
    "get": Object {},
    "set": Object {},
  },
  "exports": Object {},
  "hooks": Object {},
  "imports": Array [],
  "inputs": Array [],
  "meta": Object {},
  "name": "MyBasicComponent",
  "refs": Object {},
  "state": Object {
    "name": "PatrickJS",
  },
  "subComponents": Array [],
}
`;

exports[`Parse JSX metadata 1`] = `
Object {
  "@type": "@builder.io/mitosis/component",
  "children": Array [
    Object {
      "@type": "@builder.io/mitosis/node",
      "bindings": Object {},
      "children": Array [
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {
            "when": Object {
              "code": "props.link",
            },
          },
          "children": Array [
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
        ",
              },
              "scope": Object {},
            },
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {
                "_spread": Object {
                  "code": "props.attributes",
                },
                "href": Object {
                  "code": "props.link",
                },
                "target": Object {
                  "code": "props.openLinkInNewTab ? '_blank' : undefined",
                },
              },
              "children": Array [
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
          ",
                  },
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {
                    "_text": Object {
                      "code": "props.text",
                    },
                  },
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {},
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
        ",
                  },
                  "scope": Object {},
                },
              ],
              "meta": Object {},
              "name": "a",
              "properties": Object {},
              "scope": Object {},
            },
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
      ",
              },
              "scope": Object {},
            },
          ],
          "meta": Object {},
          "name": "Show",
          "properties": Object {},
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {
            "when": Object {
              "code": "!props.link",
            },
          },
          "children": Array [
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
        ",
              },
              "scope": Object {},
            },
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {
                "_spread": Object {
                  "code": "props.attributes",
                },
              },
              "children": Array [
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
          ",
                  },
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {
                    "_text": Object {
                      "code": "props.text",
                    },
                  },
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {},
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
        ",
                  },
                  "scope": Object {},
                },
              ],
              "meta": Object {},
              "name": "button",
              "properties": Object {
                "type": "button",
              },
              "scope": Object {},
            },
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {},
              "children": Array [],
              "meta": Object {},
              "name": "div",
              "properties": Object {
                "_text": "
      ",
              },
              "scope": Object {},
            },
          ],
          "meta": Object {},
          "name": "Show",
          "properties": Object {},
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
    ",
          },
          "scope": Object {},
        },
      ],
      "meta": Object {},
      "name": "Fragment",
      "properties": Object {},
      "scope": Object {},
    },
  ],
  "context": Object {
    "get": Object {},
    "set": Object {},
  },
  "exports": Object {},
  "hooks": Object {},
  "imports": Array [],
  "inputs": Array [],
  "interfaces": Array [
    "export interface ButtonProps {
  attributes?: any;
  text?: string;
  link?: string;
  openLinkInNewTab?: boolean;
}",
  ],
  "meta": Object {
    "useMetadata": Object {
      "foo": Object {
        "bar": "baz",
      },
    },
  },
  "name": "Button",
  "propsTypeRef": "ButtonProps",
  "refs": Object {},
  "state": Object {},
  "subComponents": Array [],
}
`;

exports[`Parse JSX onUpdate return 1`] = `
Object {
  "@type": "@builder.io/mitosis/component",
  "children": Array [
    Object {
      "@type": "@builder.io/mitosis/node",
      "bindings": Object {},
      "children": Array [
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "Hello! ",
          },
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {
            "_text": Object {
              "code": "state.name",
            },
          },
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {},
          "scope": Object {},
        },
      ],
      "meta": Object {},
      "name": "div",
      "properties": Object {},
      "scope": Object {},
    },
  ],
  "context": Object {
    "get": Object {},
    "set": Object {},
  },
  "exports": Object {},
  "hooks": Object {
    "onUpdate": Array [
      Object {
        "code": "
  const controller = new AbortController();
  const signal = controller.signal;
  fetch('https://patrickjs.com/api/resource.json', {
    signal
  }).then(response => response.json()).then(data => {
    state.name = data.name;
  });
  return () => {
    if (!signal.aborted) {
      controller.abort();
    }
  };
",
        "deps": "[state.name]",
      },
    ],
  },
  "imports": Array [],
  "inputs": Array [],
  "meta": Object {},
  "name": "MyBasicOnUpdateReturnComponent",
  "refs": Object {},
  "state": Object {
    "name": "PatrickJS",
  },
  "subComponents": Array [],
}
`;

exports[`Parse JSX useRef 1`] = `
Object {
  "@type": "@builder.io/mitosis/component",
  "children": Array [
    Object {
      "@type": "@builder.io/mitosis/node",
      "bindings": Object {},
      "children": Array [
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      ",
          },
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {
            "when": Object {
              "code": "props.showInput",
            },
          },
          "children": Array [
            Object {
              "@type": "@builder.io/mitosis/node",
              "bindings": Object {},
              "children": Array [
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
          ",
                  },
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {
                    "css": Object {
                      "code": "{
  color: 'red'
}",
                    },
                    "onBlur": Object {
                      "arguments": Array [
                        "event",
                      ],
                      "code": "state.onBlur()",
                    },
                    "onChange": Object {
                      "arguments": Array [
                        "event",
                      ],
                      "code": "state.name = event.target.value",
                    },
                    "ref": Object {
                      "code": "inputRef",
                    },
                    "value": Object {
                      "code": "state.name",
                    },
                  },
                  "children": Array [],
                  "meta": Object {},
                  "name": "input",
                  "properties": Object {},
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "

          ",
                  },
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {
                    "ref": Object {
                      "code": "inputNoArgRef",
                    },
                  },
                  "children": Array [
                    Object {
                      "@type": "@builder.io/mitosis/node",
                      "bindings": Object {},
                      "children": Array [],
                      "meta": Object {},
                      "name": "div",
                      "properties": Object {
                        "_text": "
            Choose a car:
          ",
                      },
                      "scope": Object {},
                    },
                  ],
                  "meta": Object {},
                  "name": "label",
                  "properties": Object {
                    "for": "cars",
                  },
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "

          ",
                  },
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [
                    Object {
                      "@type": "@builder.io/mitosis/node",
                      "bindings": Object {},
                      "children": Array [],
                      "meta": Object {},
                      "name": "div",
                      "properties": Object {
                        "_text": "
            ",
                      },
                      "scope": Object {},
                    },
                    Object {
                      "@type": "@builder.io/mitosis/node",
                      "bindings": Object {},
                      "children": Array [
                        Object {
                          "@type": "@builder.io/mitosis/node",
                          "bindings": Object {},
                          "children": Array [],
                          "meta": Object {},
                          "name": "div",
                          "properties": Object {
                            "_text": "GR Supra",
                          },
                          "scope": Object {},
                        },
                      ],
                      "meta": Object {},
                      "name": "option",
                      "properties": Object {
                        "value": "supra",
                      },
                      "scope": Object {},
                    },
                    Object {
                      "@type": "@builder.io/mitosis/node",
                      "bindings": Object {},
                      "children": Array [],
                      "meta": Object {},
                      "name": "div",
                      "properties": Object {
                        "_text": "
            ",
                      },
                      "scope": Object {},
                    },
                    Object {
                      "@type": "@builder.io/mitosis/node",
                      "bindings": Object {},
                      "children": Array [
                        Object {
                          "@type": "@builder.io/mitosis/node",
                          "bindings": Object {},
                          "children": Array [],
                          "meta": Object {},
                          "name": "div",
                          "properties": Object {
                            "_text": "GR 86",
                          },
                          "scope": Object {},
                        },
                      ],
                      "meta": Object {},
                      "name": "option",
                      "properties": Object {
                        "value": "86",
                      },
                      "scope": Object {},
                    },
                    Object {
                      "@type": "@builder.io/mitosis/node",
                      "bindings": Object {},
                      "children": Array [],
                      "meta": Object {},
                      "name": "div",
                      "properties": Object {
                        "_text": "
          ",
                      },
                      "scope": Object {},
                    },
                  ],
                  "meta": Object {},
                  "name": "select",
                  "properties": Object {
                    "id": "cars",
                    "name": "cars",
                  },
                  "scope": Object {},
                },
                Object {
                  "@type": "@builder.io/mitosis/node",
                  "bindings": Object {},
                  "children": Array [],
                  "meta": Object {},
                  "name": "div",
                  "properties": Object {
                    "_text": "
        ",
                  },
                  "scope": Object {},
                },
              ],
              "meta": Object {},
              "name": "Fragment",
              "properties": Object {},
              "scope": Object {},
            },
          ],
          "meta": Object {},
          "name": "Show",
          "properties": Object {},
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "
      Hello
      ",
          },
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {
            "_text": Object {
              "code": "state.lowerCaseName()",
            },
          },
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {},
          "scope": Object {},
        },
        Object {
          "@type": "@builder.io/mitosis/node",
          "bindings": Object {},
          "children": Array [],
          "meta": Object {},
          "name": "div",
          "properties": Object {
            "_text": "! I can run in React, Qwik, Vue, Solid, or Web Component!
    ",
          },
          "scope": Object {},
        },
      ],
      "meta": Object {},
      "name": "div",
      "properties": Object {},
      "scope": Object {},
    },
  ],
  "context": Object {
    "get": Object {},
    "set": Object {},
  },
  "exports": Object {},
  "hooks": Object {},
  "imports": Array [],
  "inputs": Array [],
  "interfaces": Array [
    "export interface Props {
  showInput: boolean;
}",
  ],
  "meta": Object {},
  "name": "MyBasicRefComponent",
  "propsTypeRef": "Props",
  "refs": Object {
    "inputNoArgRef": Object {
      "argument": "null",
      "typeParameter": "HTMLLabelElement",
    },
    "inputRef": Object {
      "argument": "null",
      "typeParameter": "HTMLInputElement",
    },
  },
  "state": Object {
    "lowerCaseName": "@builder.io/mitosis/function:function lowerCaseName() {
  return state.name.toLowerCase();
}",
    "name": "PatrickJS",
    "onBlur": "@builder.io/mitosis/function:function onBlur() {
  // Maintain focus
  inputRef.focus();
}",
  },
  "subComponents": Array [],
}
`;
