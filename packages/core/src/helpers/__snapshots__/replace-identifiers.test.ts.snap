// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`newReplacer > Check #1 1`] = `
"const [childrenContext] = useState(useTarget({
  reactNative: {
    apiKey: props.$context.apiKey,
    apiVersion: props.$context.apiVersion,
    localState: props.$context.localState,
    rootState: props.$context.rootState,
    rootSetState: props.$context.rootSetState,
    content: props.$context.content,
    context: props.$context.context,
    registeredComponents: props.$context.registeredComponents,
    inheritedStyles: extractTextStyles(getReactNativeBlockStyles({
      block: state.useBlock,
      context: props.$context,
      blockStyles: state.attributes.style
    }))
  },
  default: props.$context
}), {
  reactive: true
})"
`;

exports[`replaceIdentifiers > Check #0 1`] = `
"function updateThing() {
  state.thing1 = $SPECIAL.thing2 + 123;
  state?.fn($SPECIAL.abc.foo);
  const x = someRandomObj.state.foo;
  const y = someRandomObj.props.state.foo;
}"
`;

exports[`replaceIdentifiers > Check #1 1`] = `
"function updateThing() {
  thing1 = thing2 + 123;
  fn(abc.foo);
  const x = someRandomObj.state.foo;
  const y = someRandomObj.props.state.foo;
}"
`;

exports[`replaceIdentifiers > Check #2 1`] = `
"function updateThing() {
  this.thing1 = this.thing2 + 123;
  this.fn(this.abc.foo);
  const x = someRandomObj.state.foo;
  const y = someRandomObj.props.state.foo;
}"
`;

exports[`replaceIdentifiers > Check #3 1`] = `"!state.useLazyLoading() || state.load"`;

exports[`replaceIdentifiers > Check #4 1`] = `"state.name = 'PatrickJS onInit' + this.hi"`;

exports[`replaceIdentifiers > Check #5 1`] = `"lowerCaseName()"`;

exports[`replaceIdentifiers > Check #6 1`] = `
"const x = {
  foo: bar,
  test: 123
};
const foo.value = x.foo;
const y = {
  l: x.foo,
  m: foo
};
const bar = foo.value"
`;
